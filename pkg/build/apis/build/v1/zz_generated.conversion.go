//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Code generated by conversion-gen. DO NOT EDIT.

package v1

import (
	url "net/url"
	time "time"
	unsafe "unsafe"

	buildv1 "github.com/openshift/api/build/v1"
	build "github.com/openshift/openshift-apiserver/pkg/build/apis/build"
	corev1 "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
	core "k8s.io/kubernetes/pkg/apis/core"
	apiscorev1 "k8s.io/kubernetes/pkg/apis/core/v1"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*buildv1.BinaryBuildRequestOptions)(nil), (*build.BinaryBuildRequestOptions)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_BinaryBuildRequestOptions_To_build_BinaryBuildRequestOptions(a.(*buildv1.BinaryBuildRequestOptions), b.(*build.BinaryBuildRequestOptions), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*build.BinaryBuildRequestOptions)(nil), (*buildv1.BinaryBuildRequestOptions)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_BinaryBuildRequestOptions_To_v1_BinaryBuildRequestOptions(a.(*build.BinaryBuildRequestOptions), b.(*buildv1.BinaryBuildRequestOptions), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*buildv1.BinaryBuildSource)(nil), (*build.BinaryBuildSource)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_BinaryBuildSource_To_build_BinaryBuildSource(a.(*buildv1.BinaryBuildSource), b.(*build.BinaryBuildSource), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*build.BinaryBuildSource)(nil), (*buildv1.BinaryBuildSource)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_BinaryBuildSource_To_v1_BinaryBuildSource(a.(*build.BinaryBuildSource), b.(*buildv1.BinaryBuildSource), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*buildv1.BitbucketWebHookCause)(nil), (*build.BitbucketWebHookCause)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_BitbucketWebHookCause_To_build_BitbucketWebHookCause(a.(*buildv1.BitbucketWebHookCause), b.(*build.BitbucketWebHookCause), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*build.BitbucketWebHookCause)(nil), (*buildv1.BitbucketWebHookCause)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_BitbucketWebHookCause_To_v1_BitbucketWebHookCause(a.(*build.BitbucketWebHookCause), b.(*buildv1.BitbucketWebHookCause), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*buildv1.Build)(nil), (*build.Build)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_Build_To_build_Build(a.(*buildv1.Build), b.(*build.Build), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*build.Build)(nil), (*buildv1.Build)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_Build_To_v1_Build(a.(*build.Build), b.(*buildv1.Build), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*buildv1.BuildCondition)(nil), (*build.BuildCondition)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_BuildCondition_To_build_BuildCondition(a.(*buildv1.BuildCondition), b.(*build.BuildCondition), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*build.BuildCondition)(nil), (*buildv1.BuildCondition)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_BuildCondition_To_v1_BuildCondition(a.(*build.BuildCondition), b.(*buildv1.BuildCondition), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*build.BuildConfig)(nil), (*buildv1.BuildConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_BuildConfig_To_v1_BuildConfig(a.(*build.BuildConfig), b.(*buildv1.BuildConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*buildv1.BuildConfigList)(nil), (*build.BuildConfigList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_BuildConfigList_To_build_BuildConfigList(a.(*buildv1.BuildConfigList), b.(*build.BuildConfigList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*build.BuildConfigList)(nil), (*buildv1.BuildConfigList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_BuildConfigList_To_v1_BuildConfigList(a.(*build.BuildConfigList), b.(*buildv1.BuildConfigList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*buildv1.BuildConfigSpec)(nil), (*build.BuildConfigSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_BuildConfigSpec_To_build_BuildConfigSpec(a.(*buildv1.BuildConfigSpec), b.(*build.BuildConfigSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*build.BuildConfigSpec)(nil), (*buildv1.BuildConfigSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_BuildConfigSpec_To_v1_BuildConfigSpec(a.(*build.BuildConfigSpec), b.(*buildv1.BuildConfigSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*buildv1.BuildConfigStatus)(nil), (*build.BuildConfigStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_BuildConfigStatus_To_build_BuildConfigStatus(a.(*buildv1.BuildConfigStatus), b.(*build.BuildConfigStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*build.BuildConfigStatus)(nil), (*buildv1.BuildConfigStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_BuildConfigStatus_To_v1_BuildConfigStatus(a.(*build.BuildConfigStatus), b.(*buildv1.BuildConfigStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*buildv1.BuildList)(nil), (*build.BuildList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_BuildList_To_build_BuildList(a.(*buildv1.BuildList), b.(*build.BuildList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*build.BuildList)(nil), (*buildv1.BuildList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_BuildList_To_v1_BuildList(a.(*build.BuildList), b.(*buildv1.BuildList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*buildv1.BuildLog)(nil), (*build.BuildLog)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_BuildLog_To_build_BuildLog(a.(*buildv1.BuildLog), b.(*build.BuildLog), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*build.BuildLog)(nil), (*buildv1.BuildLog)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_BuildLog_To_v1_BuildLog(a.(*build.BuildLog), b.(*buildv1.BuildLog), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*buildv1.BuildLogOptions)(nil), (*build.BuildLogOptions)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_BuildLogOptions_To_build_BuildLogOptions(a.(*buildv1.BuildLogOptions), b.(*build.BuildLogOptions), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*build.BuildLogOptions)(nil), (*buildv1.BuildLogOptions)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_BuildLogOptions_To_v1_BuildLogOptions(a.(*build.BuildLogOptions), b.(*buildv1.BuildLogOptions), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*build.BuildOutput)(nil), (*buildv1.BuildOutput)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_BuildOutput_To_v1_BuildOutput(a.(*build.BuildOutput), b.(*buildv1.BuildOutput), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*buildv1.BuildPostCommitSpec)(nil), (*build.BuildPostCommitSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_BuildPostCommitSpec_To_build_BuildPostCommitSpec(a.(*buildv1.BuildPostCommitSpec), b.(*build.BuildPostCommitSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*build.BuildPostCommitSpec)(nil), (*buildv1.BuildPostCommitSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_BuildPostCommitSpec_To_v1_BuildPostCommitSpec(a.(*build.BuildPostCommitSpec), b.(*buildv1.BuildPostCommitSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*buildv1.BuildRequest)(nil), (*build.BuildRequest)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_BuildRequest_To_build_BuildRequest(a.(*buildv1.BuildRequest), b.(*build.BuildRequest), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*build.BuildRequest)(nil), (*buildv1.BuildRequest)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_BuildRequest_To_v1_BuildRequest(a.(*build.BuildRequest), b.(*buildv1.BuildRequest), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*buildv1.BuildSource)(nil), (*build.BuildSource)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_BuildSource_To_build_BuildSource(a.(*buildv1.BuildSource), b.(*build.BuildSource), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*buildv1.BuildSpec)(nil), (*build.BuildSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_BuildSpec_To_build_BuildSpec(a.(*buildv1.BuildSpec), b.(*build.BuildSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*build.BuildSpec)(nil), (*buildv1.BuildSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_BuildSpec_To_v1_BuildSpec(a.(*build.BuildSpec), b.(*buildv1.BuildSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*buildv1.BuildStatus)(nil), (*build.BuildStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_BuildStatus_To_build_BuildStatus(a.(*buildv1.BuildStatus), b.(*build.BuildStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*build.BuildStatus)(nil), (*buildv1.BuildStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_BuildStatus_To_v1_BuildStatus(a.(*build.BuildStatus), b.(*buildv1.BuildStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*buildv1.BuildStatusOutput)(nil), (*build.BuildStatusOutput)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_BuildStatusOutput_To_build_BuildStatusOutput(a.(*buildv1.BuildStatusOutput), b.(*build.BuildStatusOutput), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*build.BuildStatusOutput)(nil), (*buildv1.BuildStatusOutput)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_BuildStatusOutput_To_v1_BuildStatusOutput(a.(*build.BuildStatusOutput), b.(*buildv1.BuildStatusOutput), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*buildv1.BuildStatusOutputTo)(nil), (*build.BuildStatusOutputTo)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_BuildStatusOutputTo_To_build_BuildStatusOutputTo(a.(*buildv1.BuildStatusOutputTo), b.(*build.BuildStatusOutputTo), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*build.BuildStatusOutputTo)(nil), (*buildv1.BuildStatusOutputTo)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_BuildStatusOutputTo_To_v1_BuildStatusOutputTo(a.(*build.BuildStatusOutputTo), b.(*buildv1.BuildStatusOutputTo), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*buildv1.BuildStrategy)(nil), (*build.BuildStrategy)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_BuildStrategy_To_build_BuildStrategy(a.(*buildv1.BuildStrategy), b.(*build.BuildStrategy), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*buildv1.BuildTriggerCause)(nil), (*build.BuildTriggerCause)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_BuildTriggerCause_To_build_BuildTriggerCause(a.(*buildv1.BuildTriggerCause), b.(*build.BuildTriggerCause), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*build.BuildTriggerCause)(nil), (*buildv1.BuildTriggerCause)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_BuildTriggerCause_To_v1_BuildTriggerCause(a.(*build.BuildTriggerCause), b.(*buildv1.BuildTriggerCause), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*build.BuildTriggerPolicy)(nil), (*buildv1.BuildTriggerPolicy)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_BuildTriggerPolicy_To_v1_BuildTriggerPolicy(a.(*build.BuildTriggerPolicy), b.(*buildv1.BuildTriggerPolicy), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*buildv1.BuildVolume)(nil), (*build.BuildVolume)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_BuildVolume_To_build_BuildVolume(a.(*buildv1.BuildVolume), b.(*build.BuildVolume), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*build.BuildVolume)(nil), (*buildv1.BuildVolume)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_BuildVolume_To_v1_BuildVolume(a.(*build.BuildVolume), b.(*buildv1.BuildVolume), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*buildv1.BuildVolumeMount)(nil), (*build.BuildVolumeMount)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_BuildVolumeMount_To_build_BuildVolumeMount(a.(*buildv1.BuildVolumeMount), b.(*build.BuildVolumeMount), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*build.BuildVolumeMount)(nil), (*buildv1.BuildVolumeMount)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_BuildVolumeMount_To_v1_BuildVolumeMount(a.(*build.BuildVolumeMount), b.(*buildv1.BuildVolumeMount), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*buildv1.BuildVolumeSource)(nil), (*build.BuildVolumeSource)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_BuildVolumeSource_To_build_BuildVolumeSource(a.(*buildv1.BuildVolumeSource), b.(*build.BuildVolumeSource), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*build.BuildVolumeSource)(nil), (*buildv1.BuildVolumeSource)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_BuildVolumeSource_To_v1_BuildVolumeSource(a.(*build.BuildVolumeSource), b.(*buildv1.BuildVolumeSource), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*buildv1.CommonSpec)(nil), (*build.CommonSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_CommonSpec_To_build_CommonSpec(a.(*buildv1.CommonSpec), b.(*build.CommonSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*build.CommonSpec)(nil), (*buildv1.CommonSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_CommonSpec_To_v1_CommonSpec(a.(*build.CommonSpec), b.(*buildv1.CommonSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*buildv1.CommonWebHookCause)(nil), (*build.CommonWebHookCause)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_CommonWebHookCause_To_build_CommonWebHookCause(a.(*buildv1.CommonWebHookCause), b.(*build.CommonWebHookCause), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*build.CommonWebHookCause)(nil), (*buildv1.CommonWebHookCause)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_CommonWebHookCause_To_v1_CommonWebHookCause(a.(*build.CommonWebHookCause), b.(*buildv1.CommonWebHookCause), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*buildv1.ConfigMapBuildSource)(nil), (*build.ConfigMapBuildSource)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_ConfigMapBuildSource_To_build_ConfigMapBuildSource(a.(*buildv1.ConfigMapBuildSource), b.(*build.ConfigMapBuildSource), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*build.ConfigMapBuildSource)(nil), (*buildv1.ConfigMapBuildSource)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_ConfigMapBuildSource_To_v1_ConfigMapBuildSource(a.(*build.ConfigMapBuildSource), b.(*buildv1.ConfigMapBuildSource), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*build.CustomBuildStrategy)(nil), (*buildv1.CustomBuildStrategy)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_CustomBuildStrategy_To_v1_CustomBuildStrategy(a.(*build.CustomBuildStrategy), b.(*buildv1.CustomBuildStrategy), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*build.DockerBuildStrategy)(nil), (*buildv1.DockerBuildStrategy)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_DockerBuildStrategy_To_v1_DockerBuildStrategy(a.(*build.DockerBuildStrategy), b.(*buildv1.DockerBuildStrategy), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*buildv1.DockerStrategyOptions)(nil), (*build.DockerStrategyOptions)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_DockerStrategyOptions_To_build_DockerStrategyOptions(a.(*buildv1.DockerStrategyOptions), b.(*build.DockerStrategyOptions), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*build.DockerStrategyOptions)(nil), (*buildv1.DockerStrategyOptions)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_DockerStrategyOptions_To_v1_DockerStrategyOptions(a.(*build.DockerStrategyOptions), b.(*buildv1.DockerStrategyOptions), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*buildv1.GenericWebHookCause)(nil), (*build.GenericWebHookCause)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_GenericWebHookCause_To_build_GenericWebHookCause(a.(*buildv1.GenericWebHookCause), b.(*build.GenericWebHookCause), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*build.GenericWebHookCause)(nil), (*buildv1.GenericWebHookCause)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_GenericWebHookCause_To_v1_GenericWebHookCause(a.(*build.GenericWebHookCause), b.(*buildv1.GenericWebHookCause), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*buildv1.GenericWebHookEvent)(nil), (*build.GenericWebHookEvent)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_GenericWebHookEvent_To_build_GenericWebHookEvent(a.(*buildv1.GenericWebHookEvent), b.(*build.GenericWebHookEvent), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*build.GenericWebHookEvent)(nil), (*buildv1.GenericWebHookEvent)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_GenericWebHookEvent_To_v1_GenericWebHookEvent(a.(*build.GenericWebHookEvent), b.(*buildv1.GenericWebHookEvent), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*buildv1.GitBuildSource)(nil), (*build.GitBuildSource)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_GitBuildSource_To_build_GitBuildSource(a.(*buildv1.GitBuildSource), b.(*build.GitBuildSource), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*build.GitBuildSource)(nil), (*buildv1.GitBuildSource)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_GitBuildSource_To_v1_GitBuildSource(a.(*build.GitBuildSource), b.(*buildv1.GitBuildSource), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*buildv1.GitHubWebHookCause)(nil), (*build.GitHubWebHookCause)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_GitHubWebHookCause_To_build_GitHubWebHookCause(a.(*buildv1.GitHubWebHookCause), b.(*build.GitHubWebHookCause), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*build.GitHubWebHookCause)(nil), (*buildv1.GitHubWebHookCause)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_GitHubWebHookCause_To_v1_GitHubWebHookCause(a.(*build.GitHubWebHookCause), b.(*buildv1.GitHubWebHookCause), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*buildv1.GitInfo)(nil), (*build.GitInfo)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_GitInfo_To_build_GitInfo(a.(*buildv1.GitInfo), b.(*build.GitInfo), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*build.GitInfo)(nil), (*buildv1.GitInfo)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_GitInfo_To_v1_GitInfo(a.(*build.GitInfo), b.(*buildv1.GitInfo), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*buildv1.GitLabWebHookCause)(nil), (*build.GitLabWebHookCause)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_GitLabWebHookCause_To_build_GitLabWebHookCause(a.(*buildv1.GitLabWebHookCause), b.(*build.GitLabWebHookCause), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*build.GitLabWebHookCause)(nil), (*buildv1.GitLabWebHookCause)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_GitLabWebHookCause_To_v1_GitLabWebHookCause(a.(*build.GitLabWebHookCause), b.(*buildv1.GitLabWebHookCause), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*buildv1.GitRefInfo)(nil), (*build.GitRefInfo)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_GitRefInfo_To_build_GitRefInfo(a.(*buildv1.GitRefInfo), b.(*build.GitRefInfo), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*build.GitRefInfo)(nil), (*buildv1.GitRefInfo)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_GitRefInfo_To_v1_GitRefInfo(a.(*build.GitRefInfo), b.(*buildv1.GitRefInfo), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*buildv1.GitSourceRevision)(nil), (*build.GitSourceRevision)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_GitSourceRevision_To_build_GitSourceRevision(a.(*buildv1.GitSourceRevision), b.(*build.GitSourceRevision), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*build.GitSourceRevision)(nil), (*buildv1.GitSourceRevision)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_GitSourceRevision_To_v1_GitSourceRevision(a.(*build.GitSourceRevision), b.(*buildv1.GitSourceRevision), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*buildv1.ImageChangeCause)(nil), (*build.ImageChangeCause)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_ImageChangeCause_To_build_ImageChangeCause(a.(*buildv1.ImageChangeCause), b.(*build.ImageChangeCause), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*build.ImageChangeCause)(nil), (*buildv1.ImageChangeCause)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_ImageChangeCause_To_v1_ImageChangeCause(a.(*build.ImageChangeCause), b.(*buildv1.ImageChangeCause), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*buildv1.ImageChangeTrigger)(nil), (*build.ImageChangeTrigger)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_ImageChangeTrigger_To_build_ImageChangeTrigger(a.(*buildv1.ImageChangeTrigger), b.(*build.ImageChangeTrigger), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*build.ImageChangeTrigger)(nil), (*buildv1.ImageChangeTrigger)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_ImageChangeTrigger_To_v1_ImageChangeTrigger(a.(*build.ImageChangeTrigger), b.(*buildv1.ImageChangeTrigger), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*buildv1.ImageChangeTriggerStatus)(nil), (*build.ImageChangeTriggerStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_ImageChangeTriggerStatus_To_build_ImageChangeTriggerStatus(a.(*buildv1.ImageChangeTriggerStatus), b.(*build.ImageChangeTriggerStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*build.ImageChangeTriggerStatus)(nil), (*buildv1.ImageChangeTriggerStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_ImageChangeTriggerStatus_To_v1_ImageChangeTriggerStatus(a.(*build.ImageChangeTriggerStatus), b.(*buildv1.ImageChangeTriggerStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*buildv1.ImageLabel)(nil), (*build.ImageLabel)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_ImageLabel_To_build_ImageLabel(a.(*buildv1.ImageLabel), b.(*build.ImageLabel), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*build.ImageLabel)(nil), (*buildv1.ImageLabel)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_ImageLabel_To_v1_ImageLabel(a.(*build.ImageLabel), b.(*buildv1.ImageLabel), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*buildv1.ImageSource)(nil), (*build.ImageSource)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_ImageSource_To_build_ImageSource(a.(*buildv1.ImageSource), b.(*build.ImageSource), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*build.ImageSource)(nil), (*buildv1.ImageSource)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_ImageSource_To_v1_ImageSource(a.(*build.ImageSource), b.(*buildv1.ImageSource), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*buildv1.ImageSourcePath)(nil), (*build.ImageSourcePath)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_ImageSourcePath_To_build_ImageSourcePath(a.(*buildv1.ImageSourcePath), b.(*build.ImageSourcePath), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*build.ImageSourcePath)(nil), (*buildv1.ImageSourcePath)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_ImageSourcePath_To_v1_ImageSourcePath(a.(*build.ImageSourcePath), b.(*buildv1.ImageSourcePath), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*buildv1.ImageStreamTagReference)(nil), (*build.ImageStreamTagReference)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_ImageStreamTagReference_To_build_ImageStreamTagReference(a.(*buildv1.ImageStreamTagReference), b.(*build.ImageStreamTagReference), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*build.ImageStreamTagReference)(nil), (*buildv1.ImageStreamTagReference)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_ImageStreamTagReference_To_v1_ImageStreamTagReference(a.(*build.ImageStreamTagReference), b.(*buildv1.ImageStreamTagReference), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*buildv1.JenkinsPipelineBuildStrategy)(nil), (*build.JenkinsPipelineBuildStrategy)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_JenkinsPipelineBuildStrategy_To_build_JenkinsPipelineBuildStrategy(a.(*buildv1.JenkinsPipelineBuildStrategy), b.(*build.JenkinsPipelineBuildStrategy), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*build.JenkinsPipelineBuildStrategy)(nil), (*buildv1.JenkinsPipelineBuildStrategy)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_JenkinsPipelineBuildStrategy_To_v1_JenkinsPipelineBuildStrategy(a.(*build.JenkinsPipelineBuildStrategy), b.(*buildv1.JenkinsPipelineBuildStrategy), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*buildv1.ProxyConfig)(nil), (*build.ProxyConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_ProxyConfig_To_build_ProxyConfig(a.(*buildv1.ProxyConfig), b.(*build.ProxyConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*build.ProxyConfig)(nil), (*buildv1.ProxyConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_ProxyConfig_To_v1_ProxyConfig(a.(*build.ProxyConfig), b.(*buildv1.ProxyConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*buildv1.SecretBuildSource)(nil), (*build.SecretBuildSource)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_SecretBuildSource_To_build_SecretBuildSource(a.(*buildv1.SecretBuildSource), b.(*build.SecretBuildSource), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*build.SecretBuildSource)(nil), (*buildv1.SecretBuildSource)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_SecretBuildSource_To_v1_SecretBuildSource(a.(*build.SecretBuildSource), b.(*buildv1.SecretBuildSource), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*buildv1.SecretLocalReference)(nil), (*build.SecretLocalReference)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_SecretLocalReference_To_build_SecretLocalReference(a.(*buildv1.SecretLocalReference), b.(*build.SecretLocalReference), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*build.SecretLocalReference)(nil), (*buildv1.SecretLocalReference)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_SecretLocalReference_To_v1_SecretLocalReference(a.(*build.SecretLocalReference), b.(*buildv1.SecretLocalReference), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*buildv1.SecretSpec)(nil), (*build.SecretSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_SecretSpec_To_build_SecretSpec(a.(*buildv1.SecretSpec), b.(*build.SecretSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*build.SecretSpec)(nil), (*buildv1.SecretSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_SecretSpec_To_v1_SecretSpec(a.(*build.SecretSpec), b.(*buildv1.SecretSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*build.SourceBuildStrategy)(nil), (*buildv1.SourceBuildStrategy)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_SourceBuildStrategy_To_v1_SourceBuildStrategy(a.(*build.SourceBuildStrategy), b.(*buildv1.SourceBuildStrategy), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*buildv1.SourceControlUser)(nil), (*build.SourceControlUser)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_SourceControlUser_To_build_SourceControlUser(a.(*buildv1.SourceControlUser), b.(*build.SourceControlUser), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*build.SourceControlUser)(nil), (*buildv1.SourceControlUser)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_SourceControlUser_To_v1_SourceControlUser(a.(*build.SourceControlUser), b.(*buildv1.SourceControlUser), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*buildv1.SourceRevision)(nil), (*build.SourceRevision)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_SourceRevision_To_build_SourceRevision(a.(*buildv1.SourceRevision), b.(*build.SourceRevision), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*buildv1.SourceStrategyOptions)(nil), (*build.SourceStrategyOptions)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_SourceStrategyOptions_To_build_SourceStrategyOptions(a.(*buildv1.SourceStrategyOptions), b.(*build.SourceStrategyOptions), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*build.SourceStrategyOptions)(nil), (*buildv1.SourceStrategyOptions)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_SourceStrategyOptions_To_v1_SourceStrategyOptions(a.(*build.SourceStrategyOptions), b.(*buildv1.SourceStrategyOptions), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*buildv1.StageInfo)(nil), (*build.StageInfo)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_StageInfo_To_build_StageInfo(a.(*buildv1.StageInfo), b.(*build.StageInfo), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*build.StageInfo)(nil), (*buildv1.StageInfo)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_StageInfo_To_v1_StageInfo(a.(*build.StageInfo), b.(*buildv1.StageInfo), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*buildv1.StepInfo)(nil), (*build.StepInfo)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_StepInfo_To_build_StepInfo(a.(*buildv1.StepInfo), b.(*build.StepInfo), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*build.StepInfo)(nil), (*buildv1.StepInfo)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_StepInfo_To_v1_StepInfo(a.(*build.StepInfo), b.(*buildv1.StepInfo), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*buildv1.WebHookTrigger)(nil), (*build.WebHookTrigger)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_WebHookTrigger_To_build_WebHookTrigger(a.(*buildv1.WebHookTrigger), b.(*build.WebHookTrigger), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*build.WebHookTrigger)(nil), (*buildv1.WebHookTrigger)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_WebHookTrigger_To_v1_WebHookTrigger(a.(*build.WebHookTrigger), b.(*buildv1.WebHookTrigger), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*build.BuildSource)(nil), (*buildv1.BuildSource)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_BuildSource_To_v1_BuildSource(a.(*build.BuildSource), b.(*buildv1.BuildSource), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*build.BuildStrategy)(nil), (*buildv1.BuildStrategy)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_BuildStrategy_To_v1_BuildStrategy(a.(*build.BuildStrategy), b.(*buildv1.BuildStrategy), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*build.SourceRevision)(nil), (*buildv1.SourceRevision)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_build_SourceRevision_To_v1_SourceRevision(a.(*build.SourceRevision), b.(*buildv1.SourceRevision), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*url.Values)(nil), (*buildv1.BinaryBuildRequestOptions)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_url_Values_To_v1_BinaryBuildRequestOptions(a.(*url.Values), b.(*buildv1.BinaryBuildRequestOptions), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*url.Values)(nil), (*buildv1.BuildLogOptions)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_url_Values_To_v1_BuildLogOptions(a.(*url.Values), b.(*buildv1.BuildLogOptions), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*buildv1.BinaryBuildRequestOptions)(nil), (*url.Values)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_BinaryBuildRequestOptions_To_url_Values(a.(*buildv1.BinaryBuildRequestOptions), b.(*url.Values), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*buildv1.BuildConfig)(nil), (*build.BuildConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_BuildConfig_To_build_BuildConfig(a.(*buildv1.BuildConfig), b.(*build.BuildConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*buildv1.BuildOutput)(nil), (*build.BuildOutput)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_BuildOutput_To_build_BuildOutput(a.(*buildv1.BuildOutput), b.(*build.BuildOutput), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*buildv1.BuildTriggerPolicy)(nil), (*build.BuildTriggerPolicy)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_BuildTriggerPolicy_To_build_BuildTriggerPolicy(a.(*buildv1.BuildTriggerPolicy), b.(*build.BuildTriggerPolicy), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*buildv1.CustomBuildStrategy)(nil), (*build.CustomBuildStrategy)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_CustomBuildStrategy_To_build_CustomBuildStrategy(a.(*buildv1.CustomBuildStrategy), b.(*build.CustomBuildStrategy), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*buildv1.DockerBuildStrategy)(nil), (*build.DockerBuildStrategy)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_DockerBuildStrategy_To_build_DockerBuildStrategy(a.(*buildv1.DockerBuildStrategy), b.(*build.DockerBuildStrategy), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*buildv1.SourceBuildStrategy)(nil), (*build.SourceBuildStrategy)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_SourceBuildStrategy_To_build_SourceBuildStrategy(a.(*buildv1.SourceBuildStrategy), b.(*build.SourceBuildStrategy), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1_BinaryBuildRequestOptions_To_build_BinaryBuildRequestOptions(in *buildv1.BinaryBuildRequestOptions, out *build.BinaryBuildRequestOptions, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	out.AsFile = in.AsFile
	out.Commit = in.Commit
	out.Message = in.Message
	out.AuthorName = in.AuthorName
	out.AuthorEmail = in.AuthorEmail
	out.CommitterName = in.CommitterName
	out.CommitterEmail = in.CommitterEmail
	return nil
}

// Convert_v1_BinaryBuildRequestOptions_To_build_BinaryBuildRequestOptions is an autogenerated conversion function.
func Convert_v1_BinaryBuildRequestOptions_To_build_BinaryBuildRequestOptions(in *buildv1.BinaryBuildRequestOptions, out *build.BinaryBuildRequestOptions, s conversion.Scope) error {
	return autoConvert_v1_BinaryBuildRequestOptions_To_build_BinaryBuildRequestOptions(in, out, s)
}

func autoConvert_build_BinaryBuildRequestOptions_To_v1_BinaryBuildRequestOptions(in *build.BinaryBuildRequestOptions, out *buildv1.BinaryBuildRequestOptions, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	out.AsFile = in.AsFile
	out.Commit = in.Commit
	out.Message = in.Message
	out.AuthorName = in.AuthorName
	out.AuthorEmail = in.AuthorEmail
	out.CommitterName = in.CommitterName
	out.CommitterEmail = in.CommitterEmail
	return nil
}

// Convert_build_BinaryBuildRequestOptions_To_v1_BinaryBuildRequestOptions is an autogenerated conversion function.
func Convert_build_BinaryBuildRequestOptions_To_v1_BinaryBuildRequestOptions(in *build.BinaryBuildRequestOptions, out *buildv1.BinaryBuildRequestOptions, s conversion.Scope) error {
	return autoConvert_build_BinaryBuildRequestOptions_To_v1_BinaryBuildRequestOptions(in, out, s)
}

func autoConvert_v1_BinaryBuildSource_To_build_BinaryBuildSource(in *buildv1.BinaryBuildSource, out *build.BinaryBuildSource, s conversion.Scope) error {
	out.AsFile = in.AsFile
	return nil
}

// Convert_v1_BinaryBuildSource_To_build_BinaryBuildSource is an autogenerated conversion function.
func Convert_v1_BinaryBuildSource_To_build_BinaryBuildSource(in *buildv1.BinaryBuildSource, out *build.BinaryBuildSource, s conversion.Scope) error {
	return autoConvert_v1_BinaryBuildSource_To_build_BinaryBuildSource(in, out, s)
}

func autoConvert_build_BinaryBuildSource_To_v1_BinaryBuildSource(in *build.BinaryBuildSource, out *buildv1.BinaryBuildSource, s conversion.Scope) error {
	out.AsFile = in.AsFile
	return nil
}

// Convert_build_BinaryBuildSource_To_v1_BinaryBuildSource is an autogenerated conversion function.
func Convert_build_BinaryBuildSource_To_v1_BinaryBuildSource(in *build.BinaryBuildSource, out *buildv1.BinaryBuildSource, s conversion.Scope) error {
	return autoConvert_build_BinaryBuildSource_To_v1_BinaryBuildSource(in, out, s)
}

func autoConvert_v1_BitbucketWebHookCause_To_build_BitbucketWebHookCause(in *buildv1.BitbucketWebHookCause, out *build.BitbucketWebHookCause, s conversion.Scope) error {
	if err := Convert_v1_CommonWebHookCause_To_build_CommonWebHookCause(&in.CommonWebHookCause, &out.CommonWebHookCause, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1_BitbucketWebHookCause_To_build_BitbucketWebHookCause is an autogenerated conversion function.
func Convert_v1_BitbucketWebHookCause_To_build_BitbucketWebHookCause(in *buildv1.BitbucketWebHookCause, out *build.BitbucketWebHookCause, s conversion.Scope) error {
	return autoConvert_v1_BitbucketWebHookCause_To_build_BitbucketWebHookCause(in, out, s)
}

func autoConvert_build_BitbucketWebHookCause_To_v1_BitbucketWebHookCause(in *build.BitbucketWebHookCause, out *buildv1.BitbucketWebHookCause, s conversion.Scope) error {
	if err := Convert_build_CommonWebHookCause_To_v1_CommonWebHookCause(&in.CommonWebHookCause, &out.CommonWebHookCause, s); err != nil {
		return err
	}
	return nil
}

// Convert_build_BitbucketWebHookCause_To_v1_BitbucketWebHookCause is an autogenerated conversion function.
func Convert_build_BitbucketWebHookCause_To_v1_BitbucketWebHookCause(in *build.BitbucketWebHookCause, out *buildv1.BitbucketWebHookCause, s conversion.Scope) error {
	return autoConvert_build_BitbucketWebHookCause_To_v1_BitbucketWebHookCause(in, out, s)
}

func autoConvert_v1_Build_To_build_Build(in *buildv1.Build, out *build.Build, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1_BuildSpec_To_build_BuildSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1_BuildStatus_To_build_BuildStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1_Build_To_build_Build is an autogenerated conversion function.
func Convert_v1_Build_To_build_Build(in *buildv1.Build, out *build.Build, s conversion.Scope) error {
	return autoConvert_v1_Build_To_build_Build(in, out, s)
}

func autoConvert_build_Build_To_v1_Build(in *build.Build, out *buildv1.Build, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_build_BuildSpec_To_v1_BuildSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_build_BuildStatus_To_v1_BuildStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_build_Build_To_v1_Build is an autogenerated conversion function.
func Convert_build_Build_To_v1_Build(in *build.Build, out *buildv1.Build, s conversion.Scope) error {
	return autoConvert_build_Build_To_v1_Build(in, out, s)
}

func autoConvert_v1_BuildCondition_To_build_BuildCondition(in *buildv1.BuildCondition, out *build.BuildCondition, s conversion.Scope) error {
	out.Type = build.BuildConditionType(in.Type)
	out.Status = core.ConditionStatus(in.Status)
	out.LastUpdateTime = in.LastUpdateTime
	out.LastTransitionTime = in.LastTransitionTime
	out.Reason = in.Reason
	out.Message = in.Message
	return nil
}

// Convert_v1_BuildCondition_To_build_BuildCondition is an autogenerated conversion function.
func Convert_v1_BuildCondition_To_build_BuildCondition(in *buildv1.BuildCondition, out *build.BuildCondition, s conversion.Scope) error {
	return autoConvert_v1_BuildCondition_To_build_BuildCondition(in, out, s)
}

func autoConvert_build_BuildCondition_To_v1_BuildCondition(in *build.BuildCondition, out *buildv1.BuildCondition, s conversion.Scope) error {
	out.Type = buildv1.BuildConditionType(in.Type)
	out.Status = corev1.ConditionStatus(in.Status)
	out.LastUpdateTime = in.LastUpdateTime
	out.LastTransitionTime = in.LastTransitionTime
	out.Reason = in.Reason
	out.Message = in.Message
	return nil
}

// Convert_build_BuildCondition_To_v1_BuildCondition is an autogenerated conversion function.
func Convert_build_BuildCondition_To_v1_BuildCondition(in *build.BuildCondition, out *buildv1.BuildCondition, s conversion.Scope) error {
	return autoConvert_build_BuildCondition_To_v1_BuildCondition(in, out, s)
}

func autoConvert_v1_BuildConfig_To_build_BuildConfig(in *buildv1.BuildConfig, out *build.BuildConfig, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1_BuildConfigSpec_To_build_BuildConfigSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1_BuildConfigStatus_To_build_BuildConfigStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

func autoConvert_build_BuildConfig_To_v1_BuildConfig(in *build.BuildConfig, out *buildv1.BuildConfig, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_build_BuildConfigSpec_To_v1_BuildConfigSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_build_BuildConfigStatus_To_v1_BuildConfigStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_build_BuildConfig_To_v1_BuildConfig is an autogenerated conversion function.
func Convert_build_BuildConfig_To_v1_BuildConfig(in *build.BuildConfig, out *buildv1.BuildConfig, s conversion.Scope) error {
	return autoConvert_build_BuildConfig_To_v1_BuildConfig(in, out, s)
}

func autoConvert_v1_BuildConfigList_To_build_BuildConfigList(in *buildv1.BuildConfigList, out *build.BuildConfigList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]build.BuildConfig, len(*in))
		for i := range *in {
			if err := Convert_v1_BuildConfig_To_build_BuildConfig(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1_BuildConfigList_To_build_BuildConfigList is an autogenerated conversion function.
func Convert_v1_BuildConfigList_To_build_BuildConfigList(in *buildv1.BuildConfigList, out *build.BuildConfigList, s conversion.Scope) error {
	return autoConvert_v1_BuildConfigList_To_build_BuildConfigList(in, out, s)
}

func autoConvert_build_BuildConfigList_To_v1_BuildConfigList(in *build.BuildConfigList, out *buildv1.BuildConfigList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]buildv1.BuildConfig, len(*in))
		for i := range *in {
			if err := Convert_build_BuildConfig_To_v1_BuildConfig(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_build_BuildConfigList_To_v1_BuildConfigList is an autogenerated conversion function.
func Convert_build_BuildConfigList_To_v1_BuildConfigList(in *build.BuildConfigList, out *buildv1.BuildConfigList, s conversion.Scope) error {
	return autoConvert_build_BuildConfigList_To_v1_BuildConfigList(in, out, s)
}

func autoConvert_v1_BuildConfigSpec_To_build_BuildConfigSpec(in *buildv1.BuildConfigSpec, out *build.BuildConfigSpec, s conversion.Scope) error {
	if in.Triggers != nil {
		in, out := &in.Triggers, &out.Triggers
		*out = make([]build.BuildTriggerPolicy, len(*in))
		for i := range *in {
			if err := Convert_v1_BuildTriggerPolicy_To_build_BuildTriggerPolicy(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Triggers = nil
	}
	out.RunPolicy = build.BuildRunPolicy(in.RunPolicy)
	if err := Convert_v1_CommonSpec_To_build_CommonSpec(&in.CommonSpec, &out.CommonSpec, s); err != nil {
		return err
	}
	out.SuccessfulBuildsHistoryLimit = (*int32)(unsafe.Pointer(in.SuccessfulBuildsHistoryLimit))
	out.FailedBuildsHistoryLimit = (*int32)(unsafe.Pointer(in.FailedBuildsHistoryLimit))
	return nil
}

// Convert_v1_BuildConfigSpec_To_build_BuildConfigSpec is an autogenerated conversion function.
func Convert_v1_BuildConfigSpec_To_build_BuildConfigSpec(in *buildv1.BuildConfigSpec, out *build.BuildConfigSpec, s conversion.Scope) error {
	return autoConvert_v1_BuildConfigSpec_To_build_BuildConfigSpec(in, out, s)
}

func autoConvert_build_BuildConfigSpec_To_v1_BuildConfigSpec(in *build.BuildConfigSpec, out *buildv1.BuildConfigSpec, s conversion.Scope) error {
	if in.Triggers != nil {
		in, out := &in.Triggers, &out.Triggers
		*out = make([]buildv1.BuildTriggerPolicy, len(*in))
		for i := range *in {
			if err := Convert_build_BuildTriggerPolicy_To_v1_BuildTriggerPolicy(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Triggers = nil
	}
	out.RunPolicy = buildv1.BuildRunPolicy(in.RunPolicy)
	if err := Convert_build_CommonSpec_To_v1_CommonSpec(&in.CommonSpec, &out.CommonSpec, s); err != nil {
		return err
	}
	out.SuccessfulBuildsHistoryLimit = (*int32)(unsafe.Pointer(in.SuccessfulBuildsHistoryLimit))
	out.FailedBuildsHistoryLimit = (*int32)(unsafe.Pointer(in.FailedBuildsHistoryLimit))
	return nil
}

// Convert_build_BuildConfigSpec_To_v1_BuildConfigSpec is an autogenerated conversion function.
func Convert_build_BuildConfigSpec_To_v1_BuildConfigSpec(in *build.BuildConfigSpec, out *buildv1.BuildConfigSpec, s conversion.Scope) error {
	return autoConvert_build_BuildConfigSpec_To_v1_BuildConfigSpec(in, out, s)
}

func autoConvert_v1_BuildConfigStatus_To_build_BuildConfigStatus(in *buildv1.BuildConfigStatus, out *build.BuildConfigStatus, s conversion.Scope) error {
	out.LastVersion = in.LastVersion
	out.ImageChangeTriggers = *(*[]build.ImageChangeTriggerStatus)(unsafe.Pointer(&in.ImageChangeTriggers))
	return nil
}

// Convert_v1_BuildConfigStatus_To_build_BuildConfigStatus is an autogenerated conversion function.
func Convert_v1_BuildConfigStatus_To_build_BuildConfigStatus(in *buildv1.BuildConfigStatus, out *build.BuildConfigStatus, s conversion.Scope) error {
	return autoConvert_v1_BuildConfigStatus_To_build_BuildConfigStatus(in, out, s)
}

func autoConvert_build_BuildConfigStatus_To_v1_BuildConfigStatus(in *build.BuildConfigStatus, out *buildv1.BuildConfigStatus, s conversion.Scope) error {
	out.LastVersion = in.LastVersion
	out.ImageChangeTriggers = *(*[]buildv1.ImageChangeTriggerStatus)(unsafe.Pointer(&in.ImageChangeTriggers))
	return nil
}

// Convert_build_BuildConfigStatus_To_v1_BuildConfigStatus is an autogenerated conversion function.
func Convert_build_BuildConfigStatus_To_v1_BuildConfigStatus(in *build.BuildConfigStatus, out *buildv1.BuildConfigStatus, s conversion.Scope) error {
	return autoConvert_build_BuildConfigStatus_To_v1_BuildConfigStatus(in, out, s)
}

func autoConvert_v1_BuildList_To_build_BuildList(in *buildv1.BuildList, out *build.BuildList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]build.Build, len(*in))
		for i := range *in {
			if err := Convert_v1_Build_To_build_Build(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1_BuildList_To_build_BuildList is an autogenerated conversion function.
func Convert_v1_BuildList_To_build_BuildList(in *buildv1.BuildList, out *build.BuildList, s conversion.Scope) error {
	return autoConvert_v1_BuildList_To_build_BuildList(in, out, s)
}

func autoConvert_build_BuildList_To_v1_BuildList(in *build.BuildList, out *buildv1.BuildList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]buildv1.Build, len(*in))
		for i := range *in {
			if err := Convert_build_Build_To_v1_Build(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_build_BuildList_To_v1_BuildList is an autogenerated conversion function.
func Convert_build_BuildList_To_v1_BuildList(in *build.BuildList, out *buildv1.BuildList, s conversion.Scope) error {
	return autoConvert_build_BuildList_To_v1_BuildList(in, out, s)
}

func autoConvert_v1_BuildLog_To_build_BuildLog(in *buildv1.BuildLog, out *build.BuildLog, s conversion.Scope) error {
	return nil
}

// Convert_v1_BuildLog_To_build_BuildLog is an autogenerated conversion function.
func Convert_v1_BuildLog_To_build_BuildLog(in *buildv1.BuildLog, out *build.BuildLog, s conversion.Scope) error {
	return autoConvert_v1_BuildLog_To_build_BuildLog(in, out, s)
}

func autoConvert_build_BuildLog_To_v1_BuildLog(in *build.BuildLog, out *buildv1.BuildLog, s conversion.Scope) error {
	return nil
}

// Convert_build_BuildLog_To_v1_BuildLog is an autogenerated conversion function.
func Convert_build_BuildLog_To_v1_BuildLog(in *build.BuildLog, out *buildv1.BuildLog, s conversion.Scope) error {
	return autoConvert_build_BuildLog_To_v1_BuildLog(in, out, s)
}

func autoConvert_v1_BuildLogOptions_To_build_BuildLogOptions(in *buildv1.BuildLogOptions, out *build.BuildLogOptions, s conversion.Scope) error {
	out.Container = in.Container
	out.Follow = in.Follow
	out.Previous = in.Previous
	out.SinceSeconds = (*int64)(unsafe.Pointer(in.SinceSeconds))
	out.SinceTime = (*metav1.Time)(unsafe.Pointer(in.SinceTime))
	out.Timestamps = in.Timestamps
	out.TailLines = (*int64)(unsafe.Pointer(in.TailLines))
	out.LimitBytes = (*int64)(unsafe.Pointer(in.LimitBytes))
	out.NoWait = in.NoWait
	out.Version = (*int64)(unsafe.Pointer(in.Version))
	out.InsecureSkipTLSVerifyBackend = in.InsecureSkipTLSVerifyBackend
	return nil
}

// Convert_v1_BuildLogOptions_To_build_BuildLogOptions is an autogenerated conversion function.
func Convert_v1_BuildLogOptions_To_build_BuildLogOptions(in *buildv1.BuildLogOptions, out *build.BuildLogOptions, s conversion.Scope) error {
	return autoConvert_v1_BuildLogOptions_To_build_BuildLogOptions(in, out, s)
}

func autoConvert_build_BuildLogOptions_To_v1_BuildLogOptions(in *build.BuildLogOptions, out *buildv1.BuildLogOptions, s conversion.Scope) error {
	out.Container = in.Container
	out.Follow = in.Follow
	out.Previous = in.Previous
	out.SinceSeconds = (*int64)(unsafe.Pointer(in.SinceSeconds))
	out.SinceTime = (*metav1.Time)(unsafe.Pointer(in.SinceTime))
	out.Timestamps = in.Timestamps
	out.TailLines = (*int64)(unsafe.Pointer(in.TailLines))
	out.LimitBytes = (*int64)(unsafe.Pointer(in.LimitBytes))
	out.NoWait = in.NoWait
	out.Version = (*int64)(unsafe.Pointer(in.Version))
	out.InsecureSkipTLSVerifyBackend = in.InsecureSkipTLSVerifyBackend
	return nil
}

// Convert_build_BuildLogOptions_To_v1_BuildLogOptions is an autogenerated conversion function.
func Convert_build_BuildLogOptions_To_v1_BuildLogOptions(in *build.BuildLogOptions, out *buildv1.BuildLogOptions, s conversion.Scope) error {
	return autoConvert_build_BuildLogOptions_To_v1_BuildLogOptions(in, out, s)
}

func autoConvert_v1_BuildOutput_To_build_BuildOutput(in *buildv1.BuildOutput, out *build.BuildOutput, s conversion.Scope) error {
	if in.To != nil {
		in, out := &in.To, &out.To
		*out = new(core.ObjectReference)
		if err := apiscorev1.Convert_v1_ObjectReference_To_core_ObjectReference(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.To = nil
	}
	if in.PushSecret != nil {
		in, out := &in.PushSecret, &out.PushSecret
		*out = new(core.LocalObjectReference)
		if err := apiscorev1.Convert_v1_LocalObjectReference_To_core_LocalObjectReference(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.PushSecret = nil
	}
	out.ImageLabels = *(*[]build.ImageLabel)(unsafe.Pointer(&in.ImageLabels))
	return nil
}

func autoConvert_build_BuildOutput_To_v1_BuildOutput(in *build.BuildOutput, out *buildv1.BuildOutput, s conversion.Scope) error {
	if in.To != nil {
		in, out := &in.To, &out.To
		*out = new(corev1.ObjectReference)
		if err := apiscorev1.Convert_core_ObjectReference_To_v1_ObjectReference(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.To = nil
	}
	if in.PushSecret != nil {
		in, out := &in.PushSecret, &out.PushSecret
		*out = new(corev1.LocalObjectReference)
		if err := apiscorev1.Convert_core_LocalObjectReference_To_v1_LocalObjectReference(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.PushSecret = nil
	}
	out.ImageLabels = *(*[]buildv1.ImageLabel)(unsafe.Pointer(&in.ImageLabels))
	return nil
}

// Convert_build_BuildOutput_To_v1_BuildOutput is an autogenerated conversion function.
func Convert_build_BuildOutput_To_v1_BuildOutput(in *build.BuildOutput, out *buildv1.BuildOutput, s conversion.Scope) error {
	return autoConvert_build_BuildOutput_To_v1_BuildOutput(in, out, s)
}

func autoConvert_v1_BuildPostCommitSpec_To_build_BuildPostCommitSpec(in *buildv1.BuildPostCommitSpec, out *build.BuildPostCommitSpec, s conversion.Scope) error {
	out.Command = *(*[]string)(unsafe.Pointer(&in.Command))
	out.Args = *(*[]string)(unsafe.Pointer(&in.Args))
	out.Script = in.Script
	return nil
}

// Convert_v1_BuildPostCommitSpec_To_build_BuildPostCommitSpec is an autogenerated conversion function.
func Convert_v1_BuildPostCommitSpec_To_build_BuildPostCommitSpec(in *buildv1.BuildPostCommitSpec, out *build.BuildPostCommitSpec, s conversion.Scope) error {
	return autoConvert_v1_BuildPostCommitSpec_To_build_BuildPostCommitSpec(in, out, s)
}

func autoConvert_build_BuildPostCommitSpec_To_v1_BuildPostCommitSpec(in *build.BuildPostCommitSpec, out *buildv1.BuildPostCommitSpec, s conversion.Scope) error {
	out.Command = *(*[]string)(unsafe.Pointer(&in.Command))
	out.Args = *(*[]string)(unsafe.Pointer(&in.Args))
	out.Script = in.Script
	return nil
}

// Convert_build_BuildPostCommitSpec_To_v1_BuildPostCommitSpec is an autogenerated conversion function.
func Convert_build_BuildPostCommitSpec_To_v1_BuildPostCommitSpec(in *build.BuildPostCommitSpec, out *buildv1.BuildPostCommitSpec, s conversion.Scope) error {
	return autoConvert_build_BuildPostCommitSpec_To_v1_BuildPostCommitSpec(in, out, s)
}

func autoConvert_v1_BuildRequest_To_build_BuildRequest(in *buildv1.BuildRequest, out *build.BuildRequest, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if in.Revision != nil {
		in, out := &in.Revision, &out.Revision
		*out = new(build.SourceRevision)
		if err := Convert_v1_SourceRevision_To_build_SourceRevision(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Revision = nil
	}
	if in.TriggeredByImage != nil {
		in, out := &in.TriggeredByImage, &out.TriggeredByImage
		*out = new(core.ObjectReference)
		if err := apiscorev1.Convert_v1_ObjectReference_To_core_ObjectReference(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.TriggeredByImage = nil
	}
	if in.From != nil {
		in, out := &in.From, &out.From
		*out = new(core.ObjectReference)
		if err := apiscorev1.Convert_v1_ObjectReference_To_core_ObjectReference(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.From = nil
	}
	out.Binary = (*build.BinaryBuildSource)(unsafe.Pointer(in.Binary))
	out.LastVersion = (*int64)(unsafe.Pointer(in.LastVersion))
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make([]core.EnvVar, len(*in))
		for i := range *in {
			if err := apiscorev1.Convert_v1_EnvVar_To_core_EnvVar(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Env = nil
	}
	if in.TriggeredBy != nil {
		in, out := &in.TriggeredBy, &out.TriggeredBy
		*out = make([]build.BuildTriggerCause, len(*in))
		for i := range *in {
			if err := Convert_v1_BuildTriggerCause_To_build_BuildTriggerCause(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.TriggeredBy = nil
	}
	if in.DockerStrategyOptions != nil {
		in, out := &in.DockerStrategyOptions, &out.DockerStrategyOptions
		*out = new(build.DockerStrategyOptions)
		if err := Convert_v1_DockerStrategyOptions_To_build_DockerStrategyOptions(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.DockerStrategyOptions = nil
	}
	out.SourceStrategyOptions = (*build.SourceStrategyOptions)(unsafe.Pointer(in.SourceStrategyOptions))
	return nil
}

// Convert_v1_BuildRequest_To_build_BuildRequest is an autogenerated conversion function.
func Convert_v1_BuildRequest_To_build_BuildRequest(in *buildv1.BuildRequest, out *build.BuildRequest, s conversion.Scope) error {
	return autoConvert_v1_BuildRequest_To_build_BuildRequest(in, out, s)
}

func autoConvert_build_BuildRequest_To_v1_BuildRequest(in *build.BuildRequest, out *buildv1.BuildRequest, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if in.Revision != nil {
		in, out := &in.Revision, &out.Revision
		*out = new(buildv1.SourceRevision)
		if err := Convert_build_SourceRevision_To_v1_SourceRevision(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Revision = nil
	}
	if in.TriggeredByImage != nil {
		in, out := &in.TriggeredByImage, &out.TriggeredByImage
		*out = new(corev1.ObjectReference)
		if err := apiscorev1.Convert_core_ObjectReference_To_v1_ObjectReference(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.TriggeredByImage = nil
	}
	if in.From != nil {
		in, out := &in.From, &out.From
		*out = new(corev1.ObjectReference)
		if err := apiscorev1.Convert_core_ObjectReference_To_v1_ObjectReference(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.From = nil
	}
	out.Binary = (*buildv1.BinaryBuildSource)(unsafe.Pointer(in.Binary))
	out.LastVersion = (*int64)(unsafe.Pointer(in.LastVersion))
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make([]corev1.EnvVar, len(*in))
		for i := range *in {
			if err := apiscorev1.Convert_core_EnvVar_To_v1_EnvVar(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Env = nil
	}
	if in.TriggeredBy != nil {
		in, out := &in.TriggeredBy, &out.TriggeredBy
		*out = make([]buildv1.BuildTriggerCause, len(*in))
		for i := range *in {
			if err := Convert_build_BuildTriggerCause_To_v1_BuildTriggerCause(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.TriggeredBy = nil
	}
	if in.DockerStrategyOptions != nil {
		in, out := &in.DockerStrategyOptions, &out.DockerStrategyOptions
		*out = new(buildv1.DockerStrategyOptions)
		if err := Convert_build_DockerStrategyOptions_To_v1_DockerStrategyOptions(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.DockerStrategyOptions = nil
	}
	out.SourceStrategyOptions = (*buildv1.SourceStrategyOptions)(unsafe.Pointer(in.SourceStrategyOptions))
	return nil
}

// Convert_build_BuildRequest_To_v1_BuildRequest is an autogenerated conversion function.
func Convert_build_BuildRequest_To_v1_BuildRequest(in *build.BuildRequest, out *buildv1.BuildRequest, s conversion.Scope) error {
	return autoConvert_build_BuildRequest_To_v1_BuildRequest(in, out, s)
}

func autoConvert_v1_BuildSource_To_build_BuildSource(in *buildv1.BuildSource, out *build.BuildSource, s conversion.Scope) error {
	// INFO: in.Type opted out of conversion generation
	out.Binary = (*build.BinaryBuildSource)(unsafe.Pointer(in.Binary))
	out.Dockerfile = (*string)(unsafe.Pointer(in.Dockerfile))
	out.Git = (*build.GitBuildSource)(unsafe.Pointer(in.Git))
	if in.Images != nil {
		in, out := &in.Images, &out.Images
		*out = make([]build.ImageSource, len(*in))
		for i := range *in {
			if err := Convert_v1_ImageSource_To_build_ImageSource(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Images = nil
	}
	out.ContextDir = in.ContextDir
	if in.SourceSecret != nil {
		in, out := &in.SourceSecret, &out.SourceSecret
		*out = new(core.LocalObjectReference)
		if err := apiscorev1.Convert_v1_LocalObjectReference_To_core_LocalObjectReference(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.SourceSecret = nil
	}
	if in.Secrets != nil {
		in, out := &in.Secrets, &out.Secrets
		*out = make([]build.SecretBuildSource, len(*in))
		for i := range *in {
			if err := Convert_v1_SecretBuildSource_To_build_SecretBuildSource(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Secrets = nil
	}
	if in.ConfigMaps != nil {
		in, out := &in.ConfigMaps, &out.ConfigMaps
		*out = make([]build.ConfigMapBuildSource, len(*in))
		for i := range *in {
			if err := Convert_v1_ConfigMapBuildSource_To_build_ConfigMapBuildSource(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.ConfigMaps = nil
	}
	return nil
}

// Convert_v1_BuildSource_To_build_BuildSource is an autogenerated conversion function.
func Convert_v1_BuildSource_To_build_BuildSource(in *buildv1.BuildSource, out *build.BuildSource, s conversion.Scope) error {
	return autoConvert_v1_BuildSource_To_build_BuildSource(in, out, s)
}

func autoConvert_build_BuildSource_To_v1_BuildSource(in *build.BuildSource, out *buildv1.BuildSource, s conversion.Scope) error {
	out.Binary = (*buildv1.BinaryBuildSource)(unsafe.Pointer(in.Binary))
	out.Dockerfile = (*string)(unsafe.Pointer(in.Dockerfile))
	out.Git = (*buildv1.GitBuildSource)(unsafe.Pointer(in.Git))
	if in.Images != nil {
		in, out := &in.Images, &out.Images
		*out = make([]buildv1.ImageSource, len(*in))
		for i := range *in {
			if err := Convert_build_ImageSource_To_v1_ImageSource(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Images = nil
	}
	out.ContextDir = in.ContextDir
	if in.SourceSecret != nil {
		in, out := &in.SourceSecret, &out.SourceSecret
		*out = new(corev1.LocalObjectReference)
		if err := apiscorev1.Convert_core_LocalObjectReference_To_v1_LocalObjectReference(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.SourceSecret = nil
	}
	if in.Secrets != nil {
		in, out := &in.Secrets, &out.Secrets
		*out = make([]buildv1.SecretBuildSource, len(*in))
		for i := range *in {
			if err := Convert_build_SecretBuildSource_To_v1_SecretBuildSource(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Secrets = nil
	}
	if in.ConfigMaps != nil {
		in, out := &in.ConfigMaps, &out.ConfigMaps
		*out = make([]buildv1.ConfigMapBuildSource, len(*in))
		for i := range *in {
			if err := Convert_build_ConfigMapBuildSource_To_v1_ConfigMapBuildSource(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.ConfigMaps = nil
	}
	return nil
}

func autoConvert_v1_BuildSpec_To_build_BuildSpec(in *buildv1.BuildSpec, out *build.BuildSpec, s conversion.Scope) error {
	if err := Convert_v1_CommonSpec_To_build_CommonSpec(&in.CommonSpec, &out.CommonSpec, s); err != nil {
		return err
	}
	if in.TriggeredBy != nil {
		in, out := &in.TriggeredBy, &out.TriggeredBy
		*out = make([]build.BuildTriggerCause, len(*in))
		for i := range *in {
			if err := Convert_v1_BuildTriggerCause_To_build_BuildTriggerCause(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.TriggeredBy = nil
	}
	return nil
}

// Convert_v1_BuildSpec_To_build_BuildSpec is an autogenerated conversion function.
func Convert_v1_BuildSpec_To_build_BuildSpec(in *buildv1.BuildSpec, out *build.BuildSpec, s conversion.Scope) error {
	return autoConvert_v1_BuildSpec_To_build_BuildSpec(in, out, s)
}

func autoConvert_build_BuildSpec_To_v1_BuildSpec(in *build.BuildSpec, out *buildv1.BuildSpec, s conversion.Scope) error {
	if err := Convert_build_CommonSpec_To_v1_CommonSpec(&in.CommonSpec, &out.CommonSpec, s); err != nil {
		return err
	}
	if in.TriggeredBy != nil {
		in, out := &in.TriggeredBy, &out.TriggeredBy
		*out = make([]buildv1.BuildTriggerCause, len(*in))
		for i := range *in {
			if err := Convert_build_BuildTriggerCause_To_v1_BuildTriggerCause(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.TriggeredBy = nil
	}
	return nil
}

// Convert_build_BuildSpec_To_v1_BuildSpec is an autogenerated conversion function.
func Convert_build_BuildSpec_To_v1_BuildSpec(in *build.BuildSpec, out *buildv1.BuildSpec, s conversion.Scope) error {
	return autoConvert_build_BuildSpec_To_v1_BuildSpec(in, out, s)
}

func autoConvert_v1_BuildStatus_To_build_BuildStatus(in *buildv1.BuildStatus, out *build.BuildStatus, s conversion.Scope) error {
	out.Phase = build.BuildPhase(in.Phase)
	out.Cancelled = in.Cancelled
	out.Reason = build.StatusReason(in.Reason)
	out.Message = in.Message
	out.StartTimestamp = (*metav1.Time)(unsafe.Pointer(in.StartTimestamp))
	out.CompletionTimestamp = (*metav1.Time)(unsafe.Pointer(in.CompletionTimestamp))
	out.Duration = time.Duration(in.Duration)
	out.OutputDockerImageReference = in.OutputDockerImageReference
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = new(core.ObjectReference)
		if err := apiscorev1.Convert_v1_ObjectReference_To_core_ObjectReference(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Config = nil
	}
	if err := Convert_v1_BuildStatusOutput_To_build_BuildStatusOutput(&in.Output, &out.Output, s); err != nil {
		return err
	}
	out.Stages = *(*[]build.StageInfo)(unsafe.Pointer(&in.Stages))
	out.LogSnippet = in.LogSnippet
	out.Conditions = *(*[]build.BuildCondition)(unsafe.Pointer(&in.Conditions))
	return nil
}

// Convert_v1_BuildStatus_To_build_BuildStatus is an autogenerated conversion function.
func Convert_v1_BuildStatus_To_build_BuildStatus(in *buildv1.BuildStatus, out *build.BuildStatus, s conversion.Scope) error {
	return autoConvert_v1_BuildStatus_To_build_BuildStatus(in, out, s)
}

func autoConvert_build_BuildStatus_To_v1_BuildStatus(in *build.BuildStatus, out *buildv1.BuildStatus, s conversion.Scope) error {
	out.Phase = buildv1.BuildPhase(in.Phase)
	out.Cancelled = in.Cancelled
	out.Reason = buildv1.StatusReason(in.Reason)
	out.Message = in.Message
	out.StartTimestamp = (*metav1.Time)(unsafe.Pointer(in.StartTimestamp))
	out.CompletionTimestamp = (*metav1.Time)(unsafe.Pointer(in.CompletionTimestamp))
	out.Duration = time.Duration(in.Duration)
	out.OutputDockerImageReference = in.OutputDockerImageReference
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = new(corev1.ObjectReference)
		if err := apiscorev1.Convert_core_ObjectReference_To_v1_ObjectReference(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Config = nil
	}
	if err := Convert_build_BuildStatusOutput_To_v1_BuildStatusOutput(&in.Output, &out.Output, s); err != nil {
		return err
	}
	out.Stages = *(*[]buildv1.StageInfo)(unsafe.Pointer(&in.Stages))
	out.LogSnippet = in.LogSnippet
	out.Conditions = *(*[]buildv1.BuildCondition)(unsafe.Pointer(&in.Conditions))
	return nil
}

// Convert_build_BuildStatus_To_v1_BuildStatus is an autogenerated conversion function.
func Convert_build_BuildStatus_To_v1_BuildStatus(in *build.BuildStatus, out *buildv1.BuildStatus, s conversion.Scope) error {
	return autoConvert_build_BuildStatus_To_v1_BuildStatus(in, out, s)
}

func autoConvert_v1_BuildStatusOutput_To_build_BuildStatusOutput(in *buildv1.BuildStatusOutput, out *build.BuildStatusOutput, s conversion.Scope) error {
	out.To = (*build.BuildStatusOutputTo)(unsafe.Pointer(in.To))
	return nil
}

// Convert_v1_BuildStatusOutput_To_build_BuildStatusOutput is an autogenerated conversion function.
func Convert_v1_BuildStatusOutput_To_build_BuildStatusOutput(in *buildv1.BuildStatusOutput, out *build.BuildStatusOutput, s conversion.Scope) error {
	return autoConvert_v1_BuildStatusOutput_To_build_BuildStatusOutput(in, out, s)
}

func autoConvert_build_BuildStatusOutput_To_v1_BuildStatusOutput(in *build.BuildStatusOutput, out *buildv1.BuildStatusOutput, s conversion.Scope) error {
	out.To = (*buildv1.BuildStatusOutputTo)(unsafe.Pointer(in.To))
	return nil
}

// Convert_build_BuildStatusOutput_To_v1_BuildStatusOutput is an autogenerated conversion function.
func Convert_build_BuildStatusOutput_To_v1_BuildStatusOutput(in *build.BuildStatusOutput, out *buildv1.BuildStatusOutput, s conversion.Scope) error {
	return autoConvert_build_BuildStatusOutput_To_v1_BuildStatusOutput(in, out, s)
}

func autoConvert_v1_BuildStatusOutputTo_To_build_BuildStatusOutputTo(in *buildv1.BuildStatusOutputTo, out *build.BuildStatusOutputTo, s conversion.Scope) error {
	out.ImageDigest = in.ImageDigest
	return nil
}

// Convert_v1_BuildStatusOutputTo_To_build_BuildStatusOutputTo is an autogenerated conversion function.
func Convert_v1_BuildStatusOutputTo_To_build_BuildStatusOutputTo(in *buildv1.BuildStatusOutputTo, out *build.BuildStatusOutputTo, s conversion.Scope) error {
	return autoConvert_v1_BuildStatusOutputTo_To_build_BuildStatusOutputTo(in, out, s)
}

func autoConvert_build_BuildStatusOutputTo_To_v1_BuildStatusOutputTo(in *build.BuildStatusOutputTo, out *buildv1.BuildStatusOutputTo, s conversion.Scope) error {
	out.ImageDigest = in.ImageDigest
	return nil
}

// Convert_build_BuildStatusOutputTo_To_v1_BuildStatusOutputTo is an autogenerated conversion function.
func Convert_build_BuildStatusOutputTo_To_v1_BuildStatusOutputTo(in *build.BuildStatusOutputTo, out *buildv1.BuildStatusOutputTo, s conversion.Scope) error {
	return autoConvert_build_BuildStatusOutputTo_To_v1_BuildStatusOutputTo(in, out, s)
}

func autoConvert_v1_BuildStrategy_To_build_BuildStrategy(in *buildv1.BuildStrategy, out *build.BuildStrategy, s conversion.Scope) error {
	// INFO: in.Type opted out of conversion generation
	if in.DockerStrategy != nil {
		in, out := &in.DockerStrategy, &out.DockerStrategy
		*out = new(build.DockerBuildStrategy)
		if err := Convert_v1_DockerBuildStrategy_To_build_DockerBuildStrategy(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.DockerStrategy = nil
	}
	if in.SourceStrategy != nil {
		in, out := &in.SourceStrategy, &out.SourceStrategy
		*out = new(build.SourceBuildStrategy)
		if err := Convert_v1_SourceBuildStrategy_To_build_SourceBuildStrategy(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.SourceStrategy = nil
	}
	if in.CustomStrategy != nil {
		in, out := &in.CustomStrategy, &out.CustomStrategy
		*out = new(build.CustomBuildStrategy)
		if err := Convert_v1_CustomBuildStrategy_To_build_CustomBuildStrategy(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.CustomStrategy = nil
	}
	if in.JenkinsPipelineStrategy != nil {
		in, out := &in.JenkinsPipelineStrategy, &out.JenkinsPipelineStrategy
		*out = new(build.JenkinsPipelineBuildStrategy)
		if err := Convert_v1_JenkinsPipelineBuildStrategy_To_build_JenkinsPipelineBuildStrategy(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.JenkinsPipelineStrategy = nil
	}
	return nil
}

// Convert_v1_BuildStrategy_To_build_BuildStrategy is an autogenerated conversion function.
func Convert_v1_BuildStrategy_To_build_BuildStrategy(in *buildv1.BuildStrategy, out *build.BuildStrategy, s conversion.Scope) error {
	return autoConvert_v1_BuildStrategy_To_build_BuildStrategy(in, out, s)
}

func autoConvert_build_BuildStrategy_To_v1_BuildStrategy(in *build.BuildStrategy, out *buildv1.BuildStrategy, s conversion.Scope) error {
	if in.DockerStrategy != nil {
		in, out := &in.DockerStrategy, &out.DockerStrategy
		*out = new(buildv1.DockerBuildStrategy)
		if err := Convert_build_DockerBuildStrategy_To_v1_DockerBuildStrategy(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.DockerStrategy = nil
	}
	if in.SourceStrategy != nil {
		in, out := &in.SourceStrategy, &out.SourceStrategy
		*out = new(buildv1.SourceBuildStrategy)
		if err := Convert_build_SourceBuildStrategy_To_v1_SourceBuildStrategy(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.SourceStrategy = nil
	}
	if in.CustomStrategy != nil {
		in, out := &in.CustomStrategy, &out.CustomStrategy
		*out = new(buildv1.CustomBuildStrategy)
		if err := Convert_build_CustomBuildStrategy_To_v1_CustomBuildStrategy(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.CustomStrategy = nil
	}
	if in.JenkinsPipelineStrategy != nil {
		in, out := &in.JenkinsPipelineStrategy, &out.JenkinsPipelineStrategy
		*out = new(buildv1.JenkinsPipelineBuildStrategy)
		if err := Convert_build_JenkinsPipelineBuildStrategy_To_v1_JenkinsPipelineBuildStrategy(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.JenkinsPipelineStrategy = nil
	}
	return nil
}

func autoConvert_v1_BuildTriggerCause_To_build_BuildTriggerCause(in *buildv1.BuildTriggerCause, out *build.BuildTriggerCause, s conversion.Scope) error {
	out.Message = in.Message
	if in.GenericWebHook != nil {
		in, out := &in.GenericWebHook, &out.GenericWebHook
		*out = new(build.GenericWebHookCause)
		if err := Convert_v1_GenericWebHookCause_To_build_GenericWebHookCause(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.GenericWebHook = nil
	}
	if in.GitHubWebHook != nil {
		in, out := &in.GitHubWebHook, &out.GitHubWebHook
		*out = new(build.GitHubWebHookCause)
		if err := Convert_v1_GitHubWebHookCause_To_build_GitHubWebHookCause(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.GitHubWebHook = nil
	}
	if in.ImageChangeBuild != nil {
		in, out := &in.ImageChangeBuild, &out.ImageChangeBuild
		*out = new(build.ImageChangeCause)
		if err := Convert_v1_ImageChangeCause_To_build_ImageChangeCause(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.ImageChangeBuild = nil
	}
	if in.GitLabWebHook != nil {
		in, out := &in.GitLabWebHook, &out.GitLabWebHook
		*out = new(build.GitLabWebHookCause)
		if err := Convert_v1_GitLabWebHookCause_To_build_GitLabWebHookCause(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.GitLabWebHook = nil
	}
	if in.BitbucketWebHook != nil {
		in, out := &in.BitbucketWebHook, &out.BitbucketWebHook
		*out = new(build.BitbucketWebHookCause)
		if err := Convert_v1_BitbucketWebHookCause_To_build_BitbucketWebHookCause(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.BitbucketWebHook = nil
	}
	return nil
}

// Convert_v1_BuildTriggerCause_To_build_BuildTriggerCause is an autogenerated conversion function.
func Convert_v1_BuildTriggerCause_To_build_BuildTriggerCause(in *buildv1.BuildTriggerCause, out *build.BuildTriggerCause, s conversion.Scope) error {
	return autoConvert_v1_BuildTriggerCause_To_build_BuildTriggerCause(in, out, s)
}

func autoConvert_build_BuildTriggerCause_To_v1_BuildTriggerCause(in *build.BuildTriggerCause, out *buildv1.BuildTriggerCause, s conversion.Scope) error {
	out.Message = in.Message
	if in.GenericWebHook != nil {
		in, out := &in.GenericWebHook, &out.GenericWebHook
		*out = new(buildv1.GenericWebHookCause)
		if err := Convert_build_GenericWebHookCause_To_v1_GenericWebHookCause(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.GenericWebHook = nil
	}
	if in.GitHubWebHook != nil {
		in, out := &in.GitHubWebHook, &out.GitHubWebHook
		*out = new(buildv1.GitHubWebHookCause)
		if err := Convert_build_GitHubWebHookCause_To_v1_GitHubWebHookCause(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.GitHubWebHook = nil
	}
	if in.ImageChangeBuild != nil {
		in, out := &in.ImageChangeBuild, &out.ImageChangeBuild
		*out = new(buildv1.ImageChangeCause)
		if err := Convert_build_ImageChangeCause_To_v1_ImageChangeCause(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.ImageChangeBuild = nil
	}
	if in.GitLabWebHook != nil {
		in, out := &in.GitLabWebHook, &out.GitLabWebHook
		*out = new(buildv1.GitLabWebHookCause)
		if err := Convert_build_GitLabWebHookCause_To_v1_GitLabWebHookCause(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.GitLabWebHook = nil
	}
	if in.BitbucketWebHook != nil {
		in, out := &in.BitbucketWebHook, &out.BitbucketWebHook
		*out = new(buildv1.BitbucketWebHookCause)
		if err := Convert_build_BitbucketWebHookCause_To_v1_BitbucketWebHookCause(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.BitbucketWebHook = nil
	}
	return nil
}

// Convert_build_BuildTriggerCause_To_v1_BuildTriggerCause is an autogenerated conversion function.
func Convert_build_BuildTriggerCause_To_v1_BuildTriggerCause(in *build.BuildTriggerCause, out *buildv1.BuildTriggerCause, s conversion.Scope) error {
	return autoConvert_build_BuildTriggerCause_To_v1_BuildTriggerCause(in, out, s)
}

func autoConvert_v1_BuildTriggerPolicy_To_build_BuildTriggerPolicy(in *buildv1.BuildTriggerPolicy, out *build.BuildTriggerPolicy, s conversion.Scope) error {
	out.Type = build.BuildTriggerType(in.Type)
	out.GitHubWebHook = (*build.WebHookTrigger)(unsafe.Pointer(in.GitHubWebHook))
	out.GenericWebHook = (*build.WebHookTrigger)(unsafe.Pointer(in.GenericWebHook))
	if in.ImageChange != nil {
		in, out := &in.ImageChange, &out.ImageChange
		*out = new(build.ImageChangeTrigger)
		if err := Convert_v1_ImageChangeTrigger_To_build_ImageChangeTrigger(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.ImageChange = nil
	}
	out.GitLabWebHook = (*build.WebHookTrigger)(unsafe.Pointer(in.GitLabWebHook))
	out.BitbucketWebHook = (*build.WebHookTrigger)(unsafe.Pointer(in.BitbucketWebHook))
	return nil
}

func autoConvert_build_BuildTriggerPolicy_To_v1_BuildTriggerPolicy(in *build.BuildTriggerPolicy, out *buildv1.BuildTriggerPolicy, s conversion.Scope) error {
	out.Type = buildv1.BuildTriggerType(in.Type)
	out.GitHubWebHook = (*buildv1.WebHookTrigger)(unsafe.Pointer(in.GitHubWebHook))
	out.GenericWebHook = (*buildv1.WebHookTrigger)(unsafe.Pointer(in.GenericWebHook))
	if in.ImageChange != nil {
		in, out := &in.ImageChange, &out.ImageChange
		*out = new(buildv1.ImageChangeTrigger)
		if err := Convert_build_ImageChangeTrigger_To_v1_ImageChangeTrigger(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.ImageChange = nil
	}
	out.GitLabWebHook = (*buildv1.WebHookTrigger)(unsafe.Pointer(in.GitLabWebHook))
	out.BitbucketWebHook = (*buildv1.WebHookTrigger)(unsafe.Pointer(in.BitbucketWebHook))
	return nil
}

// Convert_build_BuildTriggerPolicy_To_v1_BuildTriggerPolicy is an autogenerated conversion function.
func Convert_build_BuildTriggerPolicy_To_v1_BuildTriggerPolicy(in *build.BuildTriggerPolicy, out *buildv1.BuildTriggerPolicy, s conversion.Scope) error {
	return autoConvert_build_BuildTriggerPolicy_To_v1_BuildTriggerPolicy(in, out, s)
}

func autoConvert_v1_BuildVolume_To_build_BuildVolume(in *buildv1.BuildVolume, out *build.BuildVolume, s conversion.Scope) error {
	out.Name = in.Name
	if err := Convert_v1_BuildVolumeSource_To_build_BuildVolumeSource(&in.Source, &out.Source, s); err != nil {
		return err
	}
	out.Mounts = *(*[]build.BuildVolumeMount)(unsafe.Pointer(&in.Mounts))
	return nil
}

// Convert_v1_BuildVolume_To_build_BuildVolume is an autogenerated conversion function.
func Convert_v1_BuildVolume_To_build_BuildVolume(in *buildv1.BuildVolume, out *build.BuildVolume, s conversion.Scope) error {
	return autoConvert_v1_BuildVolume_To_build_BuildVolume(in, out, s)
}

func autoConvert_build_BuildVolume_To_v1_BuildVolume(in *build.BuildVolume, out *buildv1.BuildVolume, s conversion.Scope) error {
	out.Name = in.Name
	if err := Convert_build_BuildVolumeSource_To_v1_BuildVolumeSource(&in.Source, &out.Source, s); err != nil {
		return err
	}
	out.Mounts = *(*[]buildv1.BuildVolumeMount)(unsafe.Pointer(&in.Mounts))
	return nil
}

// Convert_build_BuildVolume_To_v1_BuildVolume is an autogenerated conversion function.
func Convert_build_BuildVolume_To_v1_BuildVolume(in *build.BuildVolume, out *buildv1.BuildVolume, s conversion.Scope) error {
	return autoConvert_build_BuildVolume_To_v1_BuildVolume(in, out, s)
}

func autoConvert_v1_BuildVolumeMount_To_build_BuildVolumeMount(in *buildv1.BuildVolumeMount, out *build.BuildVolumeMount, s conversion.Scope) error {
	out.DestinationPath = in.DestinationPath
	return nil
}

// Convert_v1_BuildVolumeMount_To_build_BuildVolumeMount is an autogenerated conversion function.
func Convert_v1_BuildVolumeMount_To_build_BuildVolumeMount(in *buildv1.BuildVolumeMount, out *build.BuildVolumeMount, s conversion.Scope) error {
	return autoConvert_v1_BuildVolumeMount_To_build_BuildVolumeMount(in, out, s)
}

func autoConvert_build_BuildVolumeMount_To_v1_BuildVolumeMount(in *build.BuildVolumeMount, out *buildv1.BuildVolumeMount, s conversion.Scope) error {
	out.DestinationPath = in.DestinationPath
	return nil
}

// Convert_build_BuildVolumeMount_To_v1_BuildVolumeMount is an autogenerated conversion function.
func Convert_build_BuildVolumeMount_To_v1_BuildVolumeMount(in *build.BuildVolumeMount, out *buildv1.BuildVolumeMount, s conversion.Scope) error {
	return autoConvert_build_BuildVolumeMount_To_v1_BuildVolumeMount(in, out, s)
}

func autoConvert_v1_BuildVolumeSource_To_build_BuildVolumeSource(in *buildv1.BuildVolumeSource, out *build.BuildVolumeSource, s conversion.Scope) error {
	out.Type = build.BuildVolumeSourceType(in.Type)
	if in.Secret != nil {
		in, out := &in.Secret, &out.Secret
		*out = new(core.SecretVolumeSource)
		if err := apiscorev1.Convert_v1_SecretVolumeSource_To_core_SecretVolumeSource(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Secret = nil
	}
	if in.ConfigMap != nil {
		in, out := &in.ConfigMap, &out.ConfigMap
		*out = new(core.ConfigMapVolumeSource)
		if err := apiscorev1.Convert_v1_ConfigMapVolumeSource_To_core_ConfigMapVolumeSource(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.ConfigMap = nil
	}
	if in.CSI != nil {
		in, out := &in.CSI, &out.CSI
		*out = new(core.CSIVolumeSource)
		if err := apiscorev1.Convert_v1_CSIVolumeSource_To_core_CSIVolumeSource(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.CSI = nil
	}
	return nil
}

// Convert_v1_BuildVolumeSource_To_build_BuildVolumeSource is an autogenerated conversion function.
func Convert_v1_BuildVolumeSource_To_build_BuildVolumeSource(in *buildv1.BuildVolumeSource, out *build.BuildVolumeSource, s conversion.Scope) error {
	return autoConvert_v1_BuildVolumeSource_To_build_BuildVolumeSource(in, out, s)
}

func autoConvert_build_BuildVolumeSource_To_v1_BuildVolumeSource(in *build.BuildVolumeSource, out *buildv1.BuildVolumeSource, s conversion.Scope) error {
	out.Type = buildv1.BuildVolumeSourceType(in.Type)
	if in.Secret != nil {
		in, out := &in.Secret, &out.Secret
		*out = new(corev1.SecretVolumeSource)
		if err := apiscorev1.Convert_core_SecretVolumeSource_To_v1_SecretVolumeSource(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Secret = nil
	}
	if in.ConfigMap != nil {
		in, out := &in.ConfigMap, &out.ConfigMap
		*out = new(corev1.ConfigMapVolumeSource)
		if err := apiscorev1.Convert_core_ConfigMapVolumeSource_To_v1_ConfigMapVolumeSource(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.ConfigMap = nil
	}
	if in.CSI != nil {
		in, out := &in.CSI, &out.CSI
		*out = new(corev1.CSIVolumeSource)
		if err := apiscorev1.Convert_core_CSIVolumeSource_To_v1_CSIVolumeSource(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.CSI = nil
	}
	return nil
}

// Convert_build_BuildVolumeSource_To_v1_BuildVolumeSource is an autogenerated conversion function.
func Convert_build_BuildVolumeSource_To_v1_BuildVolumeSource(in *build.BuildVolumeSource, out *buildv1.BuildVolumeSource, s conversion.Scope) error {
	return autoConvert_build_BuildVolumeSource_To_v1_BuildVolumeSource(in, out, s)
}

func autoConvert_v1_CommonSpec_To_build_CommonSpec(in *buildv1.CommonSpec, out *build.CommonSpec, s conversion.Scope) error {
	out.ServiceAccount = in.ServiceAccount
	if err := Convert_v1_BuildSource_To_build_BuildSource(&in.Source, &out.Source, s); err != nil {
		return err
	}
	if in.Revision != nil {
		in, out := &in.Revision, &out.Revision
		*out = new(build.SourceRevision)
		if err := Convert_v1_SourceRevision_To_build_SourceRevision(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Revision = nil
	}
	if err := Convert_v1_BuildStrategy_To_build_BuildStrategy(&in.Strategy, &out.Strategy, s); err != nil {
		return err
	}
	if err := Convert_v1_BuildOutput_To_build_BuildOutput(&in.Output, &out.Output, s); err != nil {
		return err
	}
	if err := apiscorev1.Convert_v1_ResourceRequirements_To_core_ResourceRequirements(&in.Resources, &out.Resources, s); err != nil {
		return err
	}
	if err := Convert_v1_BuildPostCommitSpec_To_build_BuildPostCommitSpec(&in.PostCommit, &out.PostCommit, s); err != nil {
		return err
	}
	out.CompletionDeadlineSeconds = (*int64)(unsafe.Pointer(in.CompletionDeadlineSeconds))
	out.NodeSelector = *(*map[string]string)(unsafe.Pointer(&in.NodeSelector))
	out.MountTrustedCA = (*bool)(unsafe.Pointer(in.MountTrustedCA))
	return nil
}

// Convert_v1_CommonSpec_To_build_CommonSpec is an autogenerated conversion function.
func Convert_v1_CommonSpec_To_build_CommonSpec(in *buildv1.CommonSpec, out *build.CommonSpec, s conversion.Scope) error {
	return autoConvert_v1_CommonSpec_To_build_CommonSpec(in, out, s)
}

func autoConvert_build_CommonSpec_To_v1_CommonSpec(in *build.CommonSpec, out *buildv1.CommonSpec, s conversion.Scope) error {
	out.ServiceAccount = in.ServiceAccount
	if err := Convert_build_BuildSource_To_v1_BuildSource(&in.Source, &out.Source, s); err != nil {
		return err
	}
	if in.Revision != nil {
		in, out := &in.Revision, &out.Revision
		*out = new(buildv1.SourceRevision)
		if err := Convert_build_SourceRevision_To_v1_SourceRevision(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Revision = nil
	}
	if err := Convert_build_BuildStrategy_To_v1_BuildStrategy(&in.Strategy, &out.Strategy, s); err != nil {
		return err
	}
	if err := Convert_build_BuildOutput_To_v1_BuildOutput(&in.Output, &out.Output, s); err != nil {
		return err
	}
	if err := apiscorev1.Convert_core_ResourceRequirements_To_v1_ResourceRequirements(&in.Resources, &out.Resources, s); err != nil {
		return err
	}
	if err := Convert_build_BuildPostCommitSpec_To_v1_BuildPostCommitSpec(&in.PostCommit, &out.PostCommit, s); err != nil {
		return err
	}
	out.CompletionDeadlineSeconds = (*int64)(unsafe.Pointer(in.CompletionDeadlineSeconds))
	out.NodeSelector = *(*buildv1.OptionalNodeSelector)(unsafe.Pointer(&in.NodeSelector))
	out.MountTrustedCA = (*bool)(unsafe.Pointer(in.MountTrustedCA))
	return nil
}

// Convert_build_CommonSpec_To_v1_CommonSpec is an autogenerated conversion function.
func Convert_build_CommonSpec_To_v1_CommonSpec(in *build.CommonSpec, out *buildv1.CommonSpec, s conversion.Scope) error {
	return autoConvert_build_CommonSpec_To_v1_CommonSpec(in, out, s)
}

func autoConvert_v1_CommonWebHookCause_To_build_CommonWebHookCause(in *buildv1.CommonWebHookCause, out *build.CommonWebHookCause, s conversion.Scope) error {
	if in.Revision != nil {
		in, out := &in.Revision, &out.Revision
		*out = new(build.SourceRevision)
		if err := Convert_v1_SourceRevision_To_build_SourceRevision(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Revision = nil
	}
	out.Secret = in.Secret
	return nil
}

// Convert_v1_CommonWebHookCause_To_build_CommonWebHookCause is an autogenerated conversion function.
func Convert_v1_CommonWebHookCause_To_build_CommonWebHookCause(in *buildv1.CommonWebHookCause, out *build.CommonWebHookCause, s conversion.Scope) error {
	return autoConvert_v1_CommonWebHookCause_To_build_CommonWebHookCause(in, out, s)
}

func autoConvert_build_CommonWebHookCause_To_v1_CommonWebHookCause(in *build.CommonWebHookCause, out *buildv1.CommonWebHookCause, s conversion.Scope) error {
	if in.Revision != nil {
		in, out := &in.Revision, &out.Revision
		*out = new(buildv1.SourceRevision)
		if err := Convert_build_SourceRevision_To_v1_SourceRevision(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Revision = nil
	}
	out.Secret = in.Secret
	return nil
}

// Convert_build_CommonWebHookCause_To_v1_CommonWebHookCause is an autogenerated conversion function.
func Convert_build_CommonWebHookCause_To_v1_CommonWebHookCause(in *build.CommonWebHookCause, out *buildv1.CommonWebHookCause, s conversion.Scope) error {
	return autoConvert_build_CommonWebHookCause_To_v1_CommonWebHookCause(in, out, s)
}

func autoConvert_v1_ConfigMapBuildSource_To_build_ConfigMapBuildSource(in *buildv1.ConfigMapBuildSource, out *build.ConfigMapBuildSource, s conversion.Scope) error {
	if err := apiscorev1.Convert_v1_LocalObjectReference_To_core_LocalObjectReference(&in.ConfigMap, &out.ConfigMap, s); err != nil {
		return err
	}
	out.DestinationDir = in.DestinationDir
	return nil
}

// Convert_v1_ConfigMapBuildSource_To_build_ConfigMapBuildSource is an autogenerated conversion function.
func Convert_v1_ConfigMapBuildSource_To_build_ConfigMapBuildSource(in *buildv1.ConfigMapBuildSource, out *build.ConfigMapBuildSource, s conversion.Scope) error {
	return autoConvert_v1_ConfigMapBuildSource_To_build_ConfigMapBuildSource(in, out, s)
}

func autoConvert_build_ConfigMapBuildSource_To_v1_ConfigMapBuildSource(in *build.ConfigMapBuildSource, out *buildv1.ConfigMapBuildSource, s conversion.Scope) error {
	if err := apiscorev1.Convert_core_LocalObjectReference_To_v1_LocalObjectReference(&in.ConfigMap, &out.ConfigMap, s); err != nil {
		return err
	}
	out.DestinationDir = in.DestinationDir
	return nil
}

// Convert_build_ConfigMapBuildSource_To_v1_ConfigMapBuildSource is an autogenerated conversion function.
func Convert_build_ConfigMapBuildSource_To_v1_ConfigMapBuildSource(in *build.ConfigMapBuildSource, out *buildv1.ConfigMapBuildSource, s conversion.Scope) error {
	return autoConvert_build_ConfigMapBuildSource_To_v1_ConfigMapBuildSource(in, out, s)
}

func autoConvert_v1_CustomBuildStrategy_To_build_CustomBuildStrategy(in *buildv1.CustomBuildStrategy, out *build.CustomBuildStrategy, s conversion.Scope) error {
	if err := apiscorev1.Convert_v1_ObjectReference_To_core_ObjectReference(&in.From, &out.From, s); err != nil {
		return err
	}
	if in.PullSecret != nil {
		in, out := &in.PullSecret, &out.PullSecret
		*out = new(core.LocalObjectReference)
		if err := apiscorev1.Convert_v1_LocalObjectReference_To_core_LocalObjectReference(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.PullSecret = nil
	}
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make([]core.EnvVar, len(*in))
		for i := range *in {
			if err := apiscorev1.Convert_v1_EnvVar_To_core_EnvVar(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Env = nil
	}
	out.ExposeDockerSocket = in.ExposeDockerSocket
	out.ForcePull = in.ForcePull
	if in.Secrets != nil {
		in, out := &in.Secrets, &out.Secrets
		*out = make([]build.SecretSpec, len(*in))
		for i := range *in {
			if err := Convert_v1_SecretSpec_To_build_SecretSpec(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Secrets = nil
	}
	out.BuildAPIVersion = in.BuildAPIVersion
	return nil
}

func autoConvert_build_CustomBuildStrategy_To_v1_CustomBuildStrategy(in *build.CustomBuildStrategy, out *buildv1.CustomBuildStrategy, s conversion.Scope) error {
	if err := apiscorev1.Convert_core_ObjectReference_To_v1_ObjectReference(&in.From, &out.From, s); err != nil {
		return err
	}
	if in.PullSecret != nil {
		in, out := &in.PullSecret, &out.PullSecret
		*out = new(corev1.LocalObjectReference)
		if err := apiscorev1.Convert_core_LocalObjectReference_To_v1_LocalObjectReference(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.PullSecret = nil
	}
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make([]corev1.EnvVar, len(*in))
		for i := range *in {
			if err := apiscorev1.Convert_core_EnvVar_To_v1_EnvVar(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Env = nil
	}
	out.ExposeDockerSocket = in.ExposeDockerSocket
	out.ForcePull = in.ForcePull
	if in.Secrets != nil {
		in, out := &in.Secrets, &out.Secrets
		*out = make([]buildv1.SecretSpec, len(*in))
		for i := range *in {
			if err := Convert_build_SecretSpec_To_v1_SecretSpec(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Secrets = nil
	}
	out.BuildAPIVersion = in.BuildAPIVersion
	return nil
}

// Convert_build_CustomBuildStrategy_To_v1_CustomBuildStrategy is an autogenerated conversion function.
func Convert_build_CustomBuildStrategy_To_v1_CustomBuildStrategy(in *build.CustomBuildStrategy, out *buildv1.CustomBuildStrategy, s conversion.Scope) error {
	return autoConvert_build_CustomBuildStrategy_To_v1_CustomBuildStrategy(in, out, s)
}

func autoConvert_v1_DockerBuildStrategy_To_build_DockerBuildStrategy(in *buildv1.DockerBuildStrategy, out *build.DockerBuildStrategy, s conversion.Scope) error {
	if in.From != nil {
		in, out := &in.From, &out.From
		*out = new(core.ObjectReference)
		if err := apiscorev1.Convert_v1_ObjectReference_To_core_ObjectReference(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.From = nil
	}
	if in.PullSecret != nil {
		in, out := &in.PullSecret, &out.PullSecret
		*out = new(core.LocalObjectReference)
		if err := apiscorev1.Convert_v1_LocalObjectReference_To_core_LocalObjectReference(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.PullSecret = nil
	}
	out.NoCache = in.NoCache
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make([]core.EnvVar, len(*in))
		for i := range *in {
			if err := apiscorev1.Convert_v1_EnvVar_To_core_EnvVar(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Env = nil
	}
	out.ForcePull = in.ForcePull
	out.DockerfilePath = in.DockerfilePath
	if in.BuildArgs != nil {
		in, out := &in.BuildArgs, &out.BuildArgs
		*out = make([]core.EnvVar, len(*in))
		for i := range *in {
			if err := apiscorev1.Convert_v1_EnvVar_To_core_EnvVar(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.BuildArgs = nil
	}
	out.ImageOptimizationPolicy = (*build.ImageOptimizationPolicy)(unsafe.Pointer(in.ImageOptimizationPolicy))
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]build.BuildVolume, len(*in))
		for i := range *in {
			if err := Convert_v1_BuildVolume_To_build_BuildVolume(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Volumes = nil
	}
	return nil
}

func autoConvert_build_DockerBuildStrategy_To_v1_DockerBuildStrategy(in *build.DockerBuildStrategy, out *buildv1.DockerBuildStrategy, s conversion.Scope) error {
	if in.From != nil {
		in, out := &in.From, &out.From
		*out = new(corev1.ObjectReference)
		if err := apiscorev1.Convert_core_ObjectReference_To_v1_ObjectReference(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.From = nil
	}
	if in.PullSecret != nil {
		in, out := &in.PullSecret, &out.PullSecret
		*out = new(corev1.LocalObjectReference)
		if err := apiscorev1.Convert_core_LocalObjectReference_To_v1_LocalObjectReference(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.PullSecret = nil
	}
	out.NoCache = in.NoCache
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make([]corev1.EnvVar, len(*in))
		for i := range *in {
			if err := apiscorev1.Convert_core_EnvVar_To_v1_EnvVar(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Env = nil
	}
	if in.BuildArgs != nil {
		in, out := &in.BuildArgs, &out.BuildArgs
		*out = make([]corev1.EnvVar, len(*in))
		for i := range *in {
			if err := apiscorev1.Convert_core_EnvVar_To_v1_EnvVar(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.BuildArgs = nil
	}
	out.ForcePull = in.ForcePull
	out.DockerfilePath = in.DockerfilePath
	out.ImageOptimizationPolicy = (*buildv1.ImageOptimizationPolicy)(unsafe.Pointer(in.ImageOptimizationPolicy))
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]buildv1.BuildVolume, len(*in))
		for i := range *in {
			if err := Convert_build_BuildVolume_To_v1_BuildVolume(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Volumes = nil
	}
	return nil
}

// Convert_build_DockerBuildStrategy_To_v1_DockerBuildStrategy is an autogenerated conversion function.
func Convert_build_DockerBuildStrategy_To_v1_DockerBuildStrategy(in *build.DockerBuildStrategy, out *buildv1.DockerBuildStrategy, s conversion.Scope) error {
	return autoConvert_build_DockerBuildStrategy_To_v1_DockerBuildStrategy(in, out, s)
}

func autoConvert_v1_DockerStrategyOptions_To_build_DockerStrategyOptions(in *buildv1.DockerStrategyOptions, out *build.DockerStrategyOptions, s conversion.Scope) error {
	if in.BuildArgs != nil {
		in, out := &in.BuildArgs, &out.BuildArgs
		*out = make([]core.EnvVar, len(*in))
		for i := range *in {
			if err := apiscorev1.Convert_v1_EnvVar_To_core_EnvVar(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.BuildArgs = nil
	}
	out.NoCache = (*bool)(unsafe.Pointer(in.NoCache))
	return nil
}

// Convert_v1_DockerStrategyOptions_To_build_DockerStrategyOptions is an autogenerated conversion function.
func Convert_v1_DockerStrategyOptions_To_build_DockerStrategyOptions(in *buildv1.DockerStrategyOptions, out *build.DockerStrategyOptions, s conversion.Scope) error {
	return autoConvert_v1_DockerStrategyOptions_To_build_DockerStrategyOptions(in, out, s)
}

func autoConvert_build_DockerStrategyOptions_To_v1_DockerStrategyOptions(in *build.DockerStrategyOptions, out *buildv1.DockerStrategyOptions, s conversion.Scope) error {
	if in.BuildArgs != nil {
		in, out := &in.BuildArgs, &out.BuildArgs
		*out = make([]corev1.EnvVar, len(*in))
		for i := range *in {
			if err := apiscorev1.Convert_core_EnvVar_To_v1_EnvVar(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.BuildArgs = nil
	}
	out.NoCache = (*bool)(unsafe.Pointer(in.NoCache))
	return nil
}

// Convert_build_DockerStrategyOptions_To_v1_DockerStrategyOptions is an autogenerated conversion function.
func Convert_build_DockerStrategyOptions_To_v1_DockerStrategyOptions(in *build.DockerStrategyOptions, out *buildv1.DockerStrategyOptions, s conversion.Scope) error {
	return autoConvert_build_DockerStrategyOptions_To_v1_DockerStrategyOptions(in, out, s)
}

func autoConvert_v1_GenericWebHookCause_To_build_GenericWebHookCause(in *buildv1.GenericWebHookCause, out *build.GenericWebHookCause, s conversion.Scope) error {
	if in.Revision != nil {
		in, out := &in.Revision, &out.Revision
		*out = new(build.SourceRevision)
		if err := Convert_v1_SourceRevision_To_build_SourceRevision(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Revision = nil
	}
	out.Secret = in.Secret
	return nil
}

// Convert_v1_GenericWebHookCause_To_build_GenericWebHookCause is an autogenerated conversion function.
func Convert_v1_GenericWebHookCause_To_build_GenericWebHookCause(in *buildv1.GenericWebHookCause, out *build.GenericWebHookCause, s conversion.Scope) error {
	return autoConvert_v1_GenericWebHookCause_To_build_GenericWebHookCause(in, out, s)
}

func autoConvert_build_GenericWebHookCause_To_v1_GenericWebHookCause(in *build.GenericWebHookCause, out *buildv1.GenericWebHookCause, s conversion.Scope) error {
	if in.Revision != nil {
		in, out := &in.Revision, &out.Revision
		*out = new(buildv1.SourceRevision)
		if err := Convert_build_SourceRevision_To_v1_SourceRevision(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Revision = nil
	}
	out.Secret = in.Secret
	return nil
}

// Convert_build_GenericWebHookCause_To_v1_GenericWebHookCause is an autogenerated conversion function.
func Convert_build_GenericWebHookCause_To_v1_GenericWebHookCause(in *build.GenericWebHookCause, out *buildv1.GenericWebHookCause, s conversion.Scope) error {
	return autoConvert_build_GenericWebHookCause_To_v1_GenericWebHookCause(in, out, s)
}

func autoConvert_v1_GenericWebHookEvent_To_build_GenericWebHookEvent(in *buildv1.GenericWebHookEvent, out *build.GenericWebHookEvent, s conversion.Scope) error {
	// INFO: in.Type opted out of conversion generation
	out.Git = (*build.GitInfo)(unsafe.Pointer(in.Git))
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make([]core.EnvVar, len(*in))
		for i := range *in {
			if err := apiscorev1.Convert_v1_EnvVar_To_core_EnvVar(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Env = nil
	}
	if in.DockerStrategyOptions != nil {
		in, out := &in.DockerStrategyOptions, &out.DockerStrategyOptions
		*out = new(build.DockerStrategyOptions)
		if err := Convert_v1_DockerStrategyOptions_To_build_DockerStrategyOptions(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.DockerStrategyOptions = nil
	}
	return nil
}

// Convert_v1_GenericWebHookEvent_To_build_GenericWebHookEvent is an autogenerated conversion function.
func Convert_v1_GenericWebHookEvent_To_build_GenericWebHookEvent(in *buildv1.GenericWebHookEvent, out *build.GenericWebHookEvent, s conversion.Scope) error {
	return autoConvert_v1_GenericWebHookEvent_To_build_GenericWebHookEvent(in, out, s)
}

func autoConvert_build_GenericWebHookEvent_To_v1_GenericWebHookEvent(in *build.GenericWebHookEvent, out *buildv1.GenericWebHookEvent, s conversion.Scope) error {
	out.Git = (*buildv1.GitInfo)(unsafe.Pointer(in.Git))
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make([]corev1.EnvVar, len(*in))
		for i := range *in {
			if err := apiscorev1.Convert_core_EnvVar_To_v1_EnvVar(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Env = nil
	}
	if in.DockerStrategyOptions != nil {
		in, out := &in.DockerStrategyOptions, &out.DockerStrategyOptions
		*out = new(buildv1.DockerStrategyOptions)
		if err := Convert_build_DockerStrategyOptions_To_v1_DockerStrategyOptions(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.DockerStrategyOptions = nil
	}
	return nil
}

// Convert_build_GenericWebHookEvent_To_v1_GenericWebHookEvent is an autogenerated conversion function.
func Convert_build_GenericWebHookEvent_To_v1_GenericWebHookEvent(in *build.GenericWebHookEvent, out *buildv1.GenericWebHookEvent, s conversion.Scope) error {
	return autoConvert_build_GenericWebHookEvent_To_v1_GenericWebHookEvent(in, out, s)
}

func autoConvert_v1_GitBuildSource_To_build_GitBuildSource(in *buildv1.GitBuildSource, out *build.GitBuildSource, s conversion.Scope) error {
	out.URI = in.URI
	out.Ref = in.Ref
	if err := Convert_v1_ProxyConfig_To_build_ProxyConfig(&in.ProxyConfig, &out.ProxyConfig, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1_GitBuildSource_To_build_GitBuildSource is an autogenerated conversion function.
func Convert_v1_GitBuildSource_To_build_GitBuildSource(in *buildv1.GitBuildSource, out *build.GitBuildSource, s conversion.Scope) error {
	return autoConvert_v1_GitBuildSource_To_build_GitBuildSource(in, out, s)
}

func autoConvert_build_GitBuildSource_To_v1_GitBuildSource(in *build.GitBuildSource, out *buildv1.GitBuildSource, s conversion.Scope) error {
	out.URI = in.URI
	out.Ref = in.Ref
	if err := Convert_build_ProxyConfig_To_v1_ProxyConfig(&in.ProxyConfig, &out.ProxyConfig, s); err != nil {
		return err
	}
	return nil
}

// Convert_build_GitBuildSource_To_v1_GitBuildSource is an autogenerated conversion function.
func Convert_build_GitBuildSource_To_v1_GitBuildSource(in *build.GitBuildSource, out *buildv1.GitBuildSource, s conversion.Scope) error {
	return autoConvert_build_GitBuildSource_To_v1_GitBuildSource(in, out, s)
}

func autoConvert_v1_GitHubWebHookCause_To_build_GitHubWebHookCause(in *buildv1.GitHubWebHookCause, out *build.GitHubWebHookCause, s conversion.Scope) error {
	if in.Revision != nil {
		in, out := &in.Revision, &out.Revision
		*out = new(build.SourceRevision)
		if err := Convert_v1_SourceRevision_To_build_SourceRevision(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Revision = nil
	}
	out.Secret = in.Secret
	return nil
}

// Convert_v1_GitHubWebHookCause_To_build_GitHubWebHookCause is an autogenerated conversion function.
func Convert_v1_GitHubWebHookCause_To_build_GitHubWebHookCause(in *buildv1.GitHubWebHookCause, out *build.GitHubWebHookCause, s conversion.Scope) error {
	return autoConvert_v1_GitHubWebHookCause_To_build_GitHubWebHookCause(in, out, s)
}

func autoConvert_build_GitHubWebHookCause_To_v1_GitHubWebHookCause(in *build.GitHubWebHookCause, out *buildv1.GitHubWebHookCause, s conversion.Scope) error {
	if in.Revision != nil {
		in, out := &in.Revision, &out.Revision
		*out = new(buildv1.SourceRevision)
		if err := Convert_build_SourceRevision_To_v1_SourceRevision(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Revision = nil
	}
	out.Secret = in.Secret
	return nil
}

// Convert_build_GitHubWebHookCause_To_v1_GitHubWebHookCause is an autogenerated conversion function.
func Convert_build_GitHubWebHookCause_To_v1_GitHubWebHookCause(in *build.GitHubWebHookCause, out *buildv1.GitHubWebHookCause, s conversion.Scope) error {
	return autoConvert_build_GitHubWebHookCause_To_v1_GitHubWebHookCause(in, out, s)
}

func autoConvert_v1_GitInfo_To_build_GitInfo(in *buildv1.GitInfo, out *build.GitInfo, s conversion.Scope) error {
	if err := Convert_v1_GitBuildSource_To_build_GitBuildSource(&in.GitBuildSource, &out.GitBuildSource, s); err != nil {
		return err
	}
	if err := Convert_v1_GitSourceRevision_To_build_GitSourceRevision(&in.GitSourceRevision, &out.GitSourceRevision, s); err != nil {
		return err
	}
	out.Refs = *(*[]build.GitRefInfo)(unsafe.Pointer(&in.Refs))
	return nil
}

// Convert_v1_GitInfo_To_build_GitInfo is an autogenerated conversion function.
func Convert_v1_GitInfo_To_build_GitInfo(in *buildv1.GitInfo, out *build.GitInfo, s conversion.Scope) error {
	return autoConvert_v1_GitInfo_To_build_GitInfo(in, out, s)
}

func autoConvert_build_GitInfo_To_v1_GitInfo(in *build.GitInfo, out *buildv1.GitInfo, s conversion.Scope) error {
	if err := Convert_build_GitBuildSource_To_v1_GitBuildSource(&in.GitBuildSource, &out.GitBuildSource, s); err != nil {
		return err
	}
	if err := Convert_build_GitSourceRevision_To_v1_GitSourceRevision(&in.GitSourceRevision, &out.GitSourceRevision, s); err != nil {
		return err
	}
	out.Refs = *(*[]buildv1.GitRefInfo)(unsafe.Pointer(&in.Refs))
	return nil
}

// Convert_build_GitInfo_To_v1_GitInfo is an autogenerated conversion function.
func Convert_build_GitInfo_To_v1_GitInfo(in *build.GitInfo, out *buildv1.GitInfo, s conversion.Scope) error {
	return autoConvert_build_GitInfo_To_v1_GitInfo(in, out, s)
}

func autoConvert_v1_GitLabWebHookCause_To_build_GitLabWebHookCause(in *buildv1.GitLabWebHookCause, out *build.GitLabWebHookCause, s conversion.Scope) error {
	if err := Convert_v1_CommonWebHookCause_To_build_CommonWebHookCause(&in.CommonWebHookCause, &out.CommonWebHookCause, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1_GitLabWebHookCause_To_build_GitLabWebHookCause is an autogenerated conversion function.
func Convert_v1_GitLabWebHookCause_To_build_GitLabWebHookCause(in *buildv1.GitLabWebHookCause, out *build.GitLabWebHookCause, s conversion.Scope) error {
	return autoConvert_v1_GitLabWebHookCause_To_build_GitLabWebHookCause(in, out, s)
}

func autoConvert_build_GitLabWebHookCause_To_v1_GitLabWebHookCause(in *build.GitLabWebHookCause, out *buildv1.GitLabWebHookCause, s conversion.Scope) error {
	if err := Convert_build_CommonWebHookCause_To_v1_CommonWebHookCause(&in.CommonWebHookCause, &out.CommonWebHookCause, s); err != nil {
		return err
	}
	return nil
}

// Convert_build_GitLabWebHookCause_To_v1_GitLabWebHookCause is an autogenerated conversion function.
func Convert_build_GitLabWebHookCause_To_v1_GitLabWebHookCause(in *build.GitLabWebHookCause, out *buildv1.GitLabWebHookCause, s conversion.Scope) error {
	return autoConvert_build_GitLabWebHookCause_To_v1_GitLabWebHookCause(in, out, s)
}

func autoConvert_v1_GitRefInfo_To_build_GitRefInfo(in *buildv1.GitRefInfo, out *build.GitRefInfo, s conversion.Scope) error {
	if err := Convert_v1_GitBuildSource_To_build_GitBuildSource(&in.GitBuildSource, &out.GitBuildSource, s); err != nil {
		return err
	}
	if err := Convert_v1_GitSourceRevision_To_build_GitSourceRevision(&in.GitSourceRevision, &out.GitSourceRevision, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1_GitRefInfo_To_build_GitRefInfo is an autogenerated conversion function.
func Convert_v1_GitRefInfo_To_build_GitRefInfo(in *buildv1.GitRefInfo, out *build.GitRefInfo, s conversion.Scope) error {
	return autoConvert_v1_GitRefInfo_To_build_GitRefInfo(in, out, s)
}

func autoConvert_build_GitRefInfo_To_v1_GitRefInfo(in *build.GitRefInfo, out *buildv1.GitRefInfo, s conversion.Scope) error {
	if err := Convert_build_GitBuildSource_To_v1_GitBuildSource(&in.GitBuildSource, &out.GitBuildSource, s); err != nil {
		return err
	}
	if err := Convert_build_GitSourceRevision_To_v1_GitSourceRevision(&in.GitSourceRevision, &out.GitSourceRevision, s); err != nil {
		return err
	}
	return nil
}

// Convert_build_GitRefInfo_To_v1_GitRefInfo is an autogenerated conversion function.
func Convert_build_GitRefInfo_To_v1_GitRefInfo(in *build.GitRefInfo, out *buildv1.GitRefInfo, s conversion.Scope) error {
	return autoConvert_build_GitRefInfo_To_v1_GitRefInfo(in, out, s)
}

func autoConvert_v1_GitSourceRevision_To_build_GitSourceRevision(in *buildv1.GitSourceRevision, out *build.GitSourceRevision, s conversion.Scope) error {
	out.Commit = in.Commit
	if err := Convert_v1_SourceControlUser_To_build_SourceControlUser(&in.Author, &out.Author, s); err != nil {
		return err
	}
	if err := Convert_v1_SourceControlUser_To_build_SourceControlUser(&in.Committer, &out.Committer, s); err != nil {
		return err
	}
	out.Message = in.Message
	return nil
}

// Convert_v1_GitSourceRevision_To_build_GitSourceRevision is an autogenerated conversion function.
func Convert_v1_GitSourceRevision_To_build_GitSourceRevision(in *buildv1.GitSourceRevision, out *build.GitSourceRevision, s conversion.Scope) error {
	return autoConvert_v1_GitSourceRevision_To_build_GitSourceRevision(in, out, s)
}

func autoConvert_build_GitSourceRevision_To_v1_GitSourceRevision(in *build.GitSourceRevision, out *buildv1.GitSourceRevision, s conversion.Scope) error {
	out.Commit = in.Commit
	if err := Convert_build_SourceControlUser_To_v1_SourceControlUser(&in.Author, &out.Author, s); err != nil {
		return err
	}
	if err := Convert_build_SourceControlUser_To_v1_SourceControlUser(&in.Committer, &out.Committer, s); err != nil {
		return err
	}
	out.Message = in.Message
	return nil
}

// Convert_build_GitSourceRevision_To_v1_GitSourceRevision is an autogenerated conversion function.
func Convert_build_GitSourceRevision_To_v1_GitSourceRevision(in *build.GitSourceRevision, out *buildv1.GitSourceRevision, s conversion.Scope) error {
	return autoConvert_build_GitSourceRevision_To_v1_GitSourceRevision(in, out, s)
}

func autoConvert_v1_ImageChangeCause_To_build_ImageChangeCause(in *buildv1.ImageChangeCause, out *build.ImageChangeCause, s conversion.Scope) error {
	out.ImageID = in.ImageID
	if in.FromRef != nil {
		in, out := &in.FromRef, &out.FromRef
		*out = new(core.ObjectReference)
		if err := apiscorev1.Convert_v1_ObjectReference_To_core_ObjectReference(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.FromRef = nil
	}
	return nil
}

// Convert_v1_ImageChangeCause_To_build_ImageChangeCause is an autogenerated conversion function.
func Convert_v1_ImageChangeCause_To_build_ImageChangeCause(in *buildv1.ImageChangeCause, out *build.ImageChangeCause, s conversion.Scope) error {
	return autoConvert_v1_ImageChangeCause_To_build_ImageChangeCause(in, out, s)
}

func autoConvert_build_ImageChangeCause_To_v1_ImageChangeCause(in *build.ImageChangeCause, out *buildv1.ImageChangeCause, s conversion.Scope) error {
	out.ImageID = in.ImageID
	if in.FromRef != nil {
		in, out := &in.FromRef, &out.FromRef
		*out = new(corev1.ObjectReference)
		if err := apiscorev1.Convert_core_ObjectReference_To_v1_ObjectReference(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.FromRef = nil
	}
	return nil
}

// Convert_build_ImageChangeCause_To_v1_ImageChangeCause is an autogenerated conversion function.
func Convert_build_ImageChangeCause_To_v1_ImageChangeCause(in *build.ImageChangeCause, out *buildv1.ImageChangeCause, s conversion.Scope) error {
	return autoConvert_build_ImageChangeCause_To_v1_ImageChangeCause(in, out, s)
}

func autoConvert_v1_ImageChangeTrigger_To_build_ImageChangeTrigger(in *buildv1.ImageChangeTrigger, out *build.ImageChangeTrigger, s conversion.Scope) error {
	out.LastTriggeredImageID = in.LastTriggeredImageID
	if in.From != nil {
		in, out := &in.From, &out.From
		*out = new(core.ObjectReference)
		if err := apiscorev1.Convert_v1_ObjectReference_To_core_ObjectReference(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.From = nil
	}
	out.Paused = in.Paused
	return nil
}

// Convert_v1_ImageChangeTrigger_To_build_ImageChangeTrigger is an autogenerated conversion function.
func Convert_v1_ImageChangeTrigger_To_build_ImageChangeTrigger(in *buildv1.ImageChangeTrigger, out *build.ImageChangeTrigger, s conversion.Scope) error {
	return autoConvert_v1_ImageChangeTrigger_To_build_ImageChangeTrigger(in, out, s)
}

func autoConvert_build_ImageChangeTrigger_To_v1_ImageChangeTrigger(in *build.ImageChangeTrigger, out *buildv1.ImageChangeTrigger, s conversion.Scope) error {
	out.LastTriggeredImageID = in.LastTriggeredImageID
	if in.From != nil {
		in, out := &in.From, &out.From
		*out = new(corev1.ObjectReference)
		if err := apiscorev1.Convert_core_ObjectReference_To_v1_ObjectReference(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.From = nil
	}
	out.Paused = in.Paused
	return nil
}

// Convert_build_ImageChangeTrigger_To_v1_ImageChangeTrigger is an autogenerated conversion function.
func Convert_build_ImageChangeTrigger_To_v1_ImageChangeTrigger(in *build.ImageChangeTrigger, out *buildv1.ImageChangeTrigger, s conversion.Scope) error {
	return autoConvert_build_ImageChangeTrigger_To_v1_ImageChangeTrigger(in, out, s)
}

func autoConvert_v1_ImageChangeTriggerStatus_To_build_ImageChangeTriggerStatus(in *buildv1.ImageChangeTriggerStatus, out *build.ImageChangeTriggerStatus, s conversion.Scope) error {
	out.LastTriggeredImageID = in.LastTriggeredImageID
	if err := Convert_v1_ImageStreamTagReference_To_build_ImageStreamTagReference(&in.From, &out.From, s); err != nil {
		return err
	}
	out.LastTriggerTime = in.LastTriggerTime
	return nil
}

// Convert_v1_ImageChangeTriggerStatus_To_build_ImageChangeTriggerStatus is an autogenerated conversion function.
func Convert_v1_ImageChangeTriggerStatus_To_build_ImageChangeTriggerStatus(in *buildv1.ImageChangeTriggerStatus, out *build.ImageChangeTriggerStatus, s conversion.Scope) error {
	return autoConvert_v1_ImageChangeTriggerStatus_To_build_ImageChangeTriggerStatus(in, out, s)
}

func autoConvert_build_ImageChangeTriggerStatus_To_v1_ImageChangeTriggerStatus(in *build.ImageChangeTriggerStatus, out *buildv1.ImageChangeTriggerStatus, s conversion.Scope) error {
	out.LastTriggeredImageID = in.LastTriggeredImageID
	if err := Convert_build_ImageStreamTagReference_To_v1_ImageStreamTagReference(&in.From, &out.From, s); err != nil {
		return err
	}
	out.LastTriggerTime = in.LastTriggerTime
	return nil
}

// Convert_build_ImageChangeTriggerStatus_To_v1_ImageChangeTriggerStatus is an autogenerated conversion function.
func Convert_build_ImageChangeTriggerStatus_To_v1_ImageChangeTriggerStatus(in *build.ImageChangeTriggerStatus, out *buildv1.ImageChangeTriggerStatus, s conversion.Scope) error {
	return autoConvert_build_ImageChangeTriggerStatus_To_v1_ImageChangeTriggerStatus(in, out, s)
}

func autoConvert_v1_ImageLabel_To_build_ImageLabel(in *buildv1.ImageLabel, out *build.ImageLabel, s conversion.Scope) error {
	out.Name = in.Name
	out.Value = in.Value
	return nil
}

// Convert_v1_ImageLabel_To_build_ImageLabel is an autogenerated conversion function.
func Convert_v1_ImageLabel_To_build_ImageLabel(in *buildv1.ImageLabel, out *build.ImageLabel, s conversion.Scope) error {
	return autoConvert_v1_ImageLabel_To_build_ImageLabel(in, out, s)
}

func autoConvert_build_ImageLabel_To_v1_ImageLabel(in *build.ImageLabel, out *buildv1.ImageLabel, s conversion.Scope) error {
	out.Name = in.Name
	out.Value = in.Value
	return nil
}

// Convert_build_ImageLabel_To_v1_ImageLabel is an autogenerated conversion function.
func Convert_build_ImageLabel_To_v1_ImageLabel(in *build.ImageLabel, out *buildv1.ImageLabel, s conversion.Scope) error {
	return autoConvert_build_ImageLabel_To_v1_ImageLabel(in, out, s)
}

func autoConvert_v1_ImageSource_To_build_ImageSource(in *buildv1.ImageSource, out *build.ImageSource, s conversion.Scope) error {
	if err := apiscorev1.Convert_v1_ObjectReference_To_core_ObjectReference(&in.From, &out.From, s); err != nil {
		return err
	}
	out.As = *(*[]string)(unsafe.Pointer(&in.As))
	out.Paths = *(*[]build.ImageSourcePath)(unsafe.Pointer(&in.Paths))
	if in.PullSecret != nil {
		in, out := &in.PullSecret, &out.PullSecret
		*out = new(core.LocalObjectReference)
		if err := apiscorev1.Convert_v1_LocalObjectReference_To_core_LocalObjectReference(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.PullSecret = nil
	}
	return nil
}

// Convert_v1_ImageSource_To_build_ImageSource is an autogenerated conversion function.
func Convert_v1_ImageSource_To_build_ImageSource(in *buildv1.ImageSource, out *build.ImageSource, s conversion.Scope) error {
	return autoConvert_v1_ImageSource_To_build_ImageSource(in, out, s)
}

func autoConvert_build_ImageSource_To_v1_ImageSource(in *build.ImageSource, out *buildv1.ImageSource, s conversion.Scope) error {
	if err := apiscorev1.Convert_core_ObjectReference_To_v1_ObjectReference(&in.From, &out.From, s); err != nil {
		return err
	}
	out.As = *(*[]string)(unsafe.Pointer(&in.As))
	out.Paths = *(*[]buildv1.ImageSourcePath)(unsafe.Pointer(&in.Paths))
	if in.PullSecret != nil {
		in, out := &in.PullSecret, &out.PullSecret
		*out = new(corev1.LocalObjectReference)
		if err := apiscorev1.Convert_core_LocalObjectReference_To_v1_LocalObjectReference(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.PullSecret = nil
	}
	return nil
}

// Convert_build_ImageSource_To_v1_ImageSource is an autogenerated conversion function.
func Convert_build_ImageSource_To_v1_ImageSource(in *build.ImageSource, out *buildv1.ImageSource, s conversion.Scope) error {
	return autoConvert_build_ImageSource_To_v1_ImageSource(in, out, s)
}

func autoConvert_v1_ImageSourcePath_To_build_ImageSourcePath(in *buildv1.ImageSourcePath, out *build.ImageSourcePath, s conversion.Scope) error {
	out.SourcePath = in.SourcePath
	out.DestinationDir = in.DestinationDir
	return nil
}

// Convert_v1_ImageSourcePath_To_build_ImageSourcePath is an autogenerated conversion function.
func Convert_v1_ImageSourcePath_To_build_ImageSourcePath(in *buildv1.ImageSourcePath, out *build.ImageSourcePath, s conversion.Scope) error {
	return autoConvert_v1_ImageSourcePath_To_build_ImageSourcePath(in, out, s)
}

func autoConvert_build_ImageSourcePath_To_v1_ImageSourcePath(in *build.ImageSourcePath, out *buildv1.ImageSourcePath, s conversion.Scope) error {
	out.SourcePath = in.SourcePath
	out.DestinationDir = in.DestinationDir
	return nil
}

// Convert_build_ImageSourcePath_To_v1_ImageSourcePath is an autogenerated conversion function.
func Convert_build_ImageSourcePath_To_v1_ImageSourcePath(in *build.ImageSourcePath, out *buildv1.ImageSourcePath, s conversion.Scope) error {
	return autoConvert_build_ImageSourcePath_To_v1_ImageSourcePath(in, out, s)
}

func autoConvert_v1_ImageStreamTagReference_To_build_ImageStreamTagReference(in *buildv1.ImageStreamTagReference, out *build.ImageStreamTagReference, s conversion.Scope) error {
	out.Namespace = in.Namespace
	out.Name = in.Name
	return nil
}

// Convert_v1_ImageStreamTagReference_To_build_ImageStreamTagReference is an autogenerated conversion function.
func Convert_v1_ImageStreamTagReference_To_build_ImageStreamTagReference(in *buildv1.ImageStreamTagReference, out *build.ImageStreamTagReference, s conversion.Scope) error {
	return autoConvert_v1_ImageStreamTagReference_To_build_ImageStreamTagReference(in, out, s)
}

func autoConvert_build_ImageStreamTagReference_To_v1_ImageStreamTagReference(in *build.ImageStreamTagReference, out *buildv1.ImageStreamTagReference, s conversion.Scope) error {
	out.Namespace = in.Namespace
	out.Name = in.Name
	return nil
}

// Convert_build_ImageStreamTagReference_To_v1_ImageStreamTagReference is an autogenerated conversion function.
func Convert_build_ImageStreamTagReference_To_v1_ImageStreamTagReference(in *build.ImageStreamTagReference, out *buildv1.ImageStreamTagReference, s conversion.Scope) error {
	return autoConvert_build_ImageStreamTagReference_To_v1_ImageStreamTagReference(in, out, s)
}

func autoConvert_v1_JenkinsPipelineBuildStrategy_To_build_JenkinsPipelineBuildStrategy(in *buildv1.JenkinsPipelineBuildStrategy, out *build.JenkinsPipelineBuildStrategy, s conversion.Scope) error {
	out.JenkinsfilePath = in.JenkinsfilePath
	out.Jenkinsfile = in.Jenkinsfile
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make([]core.EnvVar, len(*in))
		for i := range *in {
			if err := apiscorev1.Convert_v1_EnvVar_To_core_EnvVar(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Env = nil
	}
	return nil
}

// Convert_v1_JenkinsPipelineBuildStrategy_To_build_JenkinsPipelineBuildStrategy is an autogenerated conversion function.
func Convert_v1_JenkinsPipelineBuildStrategy_To_build_JenkinsPipelineBuildStrategy(in *buildv1.JenkinsPipelineBuildStrategy, out *build.JenkinsPipelineBuildStrategy, s conversion.Scope) error {
	return autoConvert_v1_JenkinsPipelineBuildStrategy_To_build_JenkinsPipelineBuildStrategy(in, out, s)
}

func autoConvert_build_JenkinsPipelineBuildStrategy_To_v1_JenkinsPipelineBuildStrategy(in *build.JenkinsPipelineBuildStrategy, out *buildv1.JenkinsPipelineBuildStrategy, s conversion.Scope) error {
	out.JenkinsfilePath = in.JenkinsfilePath
	out.Jenkinsfile = in.Jenkinsfile
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make([]corev1.EnvVar, len(*in))
		for i := range *in {
			if err := apiscorev1.Convert_core_EnvVar_To_v1_EnvVar(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Env = nil
	}
	return nil
}

// Convert_build_JenkinsPipelineBuildStrategy_To_v1_JenkinsPipelineBuildStrategy is an autogenerated conversion function.
func Convert_build_JenkinsPipelineBuildStrategy_To_v1_JenkinsPipelineBuildStrategy(in *build.JenkinsPipelineBuildStrategy, out *buildv1.JenkinsPipelineBuildStrategy, s conversion.Scope) error {
	return autoConvert_build_JenkinsPipelineBuildStrategy_To_v1_JenkinsPipelineBuildStrategy(in, out, s)
}

func autoConvert_v1_ProxyConfig_To_build_ProxyConfig(in *buildv1.ProxyConfig, out *build.ProxyConfig, s conversion.Scope) error {
	out.HTTPProxy = (*string)(unsafe.Pointer(in.HTTPProxy))
	out.HTTPSProxy = (*string)(unsafe.Pointer(in.HTTPSProxy))
	out.NoProxy = (*string)(unsafe.Pointer(in.NoProxy))
	return nil
}

// Convert_v1_ProxyConfig_To_build_ProxyConfig is an autogenerated conversion function.
func Convert_v1_ProxyConfig_To_build_ProxyConfig(in *buildv1.ProxyConfig, out *build.ProxyConfig, s conversion.Scope) error {
	return autoConvert_v1_ProxyConfig_To_build_ProxyConfig(in, out, s)
}

func autoConvert_build_ProxyConfig_To_v1_ProxyConfig(in *build.ProxyConfig, out *buildv1.ProxyConfig, s conversion.Scope) error {
	out.HTTPProxy = (*string)(unsafe.Pointer(in.HTTPProxy))
	out.HTTPSProxy = (*string)(unsafe.Pointer(in.HTTPSProxy))
	out.NoProxy = (*string)(unsafe.Pointer(in.NoProxy))
	return nil
}

// Convert_build_ProxyConfig_To_v1_ProxyConfig is an autogenerated conversion function.
func Convert_build_ProxyConfig_To_v1_ProxyConfig(in *build.ProxyConfig, out *buildv1.ProxyConfig, s conversion.Scope) error {
	return autoConvert_build_ProxyConfig_To_v1_ProxyConfig(in, out, s)
}

func autoConvert_v1_SecretBuildSource_To_build_SecretBuildSource(in *buildv1.SecretBuildSource, out *build.SecretBuildSource, s conversion.Scope) error {
	if err := apiscorev1.Convert_v1_LocalObjectReference_To_core_LocalObjectReference(&in.Secret, &out.Secret, s); err != nil {
		return err
	}
	out.DestinationDir = in.DestinationDir
	return nil
}

// Convert_v1_SecretBuildSource_To_build_SecretBuildSource is an autogenerated conversion function.
func Convert_v1_SecretBuildSource_To_build_SecretBuildSource(in *buildv1.SecretBuildSource, out *build.SecretBuildSource, s conversion.Scope) error {
	return autoConvert_v1_SecretBuildSource_To_build_SecretBuildSource(in, out, s)
}

func autoConvert_build_SecretBuildSource_To_v1_SecretBuildSource(in *build.SecretBuildSource, out *buildv1.SecretBuildSource, s conversion.Scope) error {
	if err := apiscorev1.Convert_core_LocalObjectReference_To_v1_LocalObjectReference(&in.Secret, &out.Secret, s); err != nil {
		return err
	}
	out.DestinationDir = in.DestinationDir
	return nil
}

// Convert_build_SecretBuildSource_To_v1_SecretBuildSource is an autogenerated conversion function.
func Convert_build_SecretBuildSource_To_v1_SecretBuildSource(in *build.SecretBuildSource, out *buildv1.SecretBuildSource, s conversion.Scope) error {
	return autoConvert_build_SecretBuildSource_To_v1_SecretBuildSource(in, out, s)
}

func autoConvert_v1_SecretLocalReference_To_build_SecretLocalReference(in *buildv1.SecretLocalReference, out *build.SecretLocalReference, s conversion.Scope) error {
	out.Name = in.Name
	return nil
}

// Convert_v1_SecretLocalReference_To_build_SecretLocalReference is an autogenerated conversion function.
func Convert_v1_SecretLocalReference_To_build_SecretLocalReference(in *buildv1.SecretLocalReference, out *build.SecretLocalReference, s conversion.Scope) error {
	return autoConvert_v1_SecretLocalReference_To_build_SecretLocalReference(in, out, s)
}

func autoConvert_build_SecretLocalReference_To_v1_SecretLocalReference(in *build.SecretLocalReference, out *buildv1.SecretLocalReference, s conversion.Scope) error {
	out.Name = in.Name
	return nil
}

// Convert_build_SecretLocalReference_To_v1_SecretLocalReference is an autogenerated conversion function.
func Convert_build_SecretLocalReference_To_v1_SecretLocalReference(in *build.SecretLocalReference, out *buildv1.SecretLocalReference, s conversion.Scope) error {
	return autoConvert_build_SecretLocalReference_To_v1_SecretLocalReference(in, out, s)
}

func autoConvert_v1_SecretSpec_To_build_SecretSpec(in *buildv1.SecretSpec, out *build.SecretSpec, s conversion.Scope) error {
	if err := apiscorev1.Convert_v1_LocalObjectReference_To_core_LocalObjectReference(&in.SecretSource, &out.SecretSource, s); err != nil {
		return err
	}
	out.MountPath = in.MountPath
	return nil
}

// Convert_v1_SecretSpec_To_build_SecretSpec is an autogenerated conversion function.
func Convert_v1_SecretSpec_To_build_SecretSpec(in *buildv1.SecretSpec, out *build.SecretSpec, s conversion.Scope) error {
	return autoConvert_v1_SecretSpec_To_build_SecretSpec(in, out, s)
}

func autoConvert_build_SecretSpec_To_v1_SecretSpec(in *build.SecretSpec, out *buildv1.SecretSpec, s conversion.Scope) error {
	if err := apiscorev1.Convert_core_LocalObjectReference_To_v1_LocalObjectReference(&in.SecretSource, &out.SecretSource, s); err != nil {
		return err
	}
	out.MountPath = in.MountPath
	return nil
}

// Convert_build_SecretSpec_To_v1_SecretSpec is an autogenerated conversion function.
func Convert_build_SecretSpec_To_v1_SecretSpec(in *build.SecretSpec, out *buildv1.SecretSpec, s conversion.Scope) error {
	return autoConvert_build_SecretSpec_To_v1_SecretSpec(in, out, s)
}

func autoConvert_v1_SourceBuildStrategy_To_build_SourceBuildStrategy(in *buildv1.SourceBuildStrategy, out *build.SourceBuildStrategy, s conversion.Scope) error {
	if err := apiscorev1.Convert_v1_ObjectReference_To_core_ObjectReference(&in.From, &out.From, s); err != nil {
		return err
	}
	if in.PullSecret != nil {
		in, out := &in.PullSecret, &out.PullSecret
		*out = new(core.LocalObjectReference)
		if err := apiscorev1.Convert_v1_LocalObjectReference_To_core_LocalObjectReference(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.PullSecret = nil
	}
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make([]core.EnvVar, len(*in))
		for i := range *in {
			if err := apiscorev1.Convert_v1_EnvVar_To_core_EnvVar(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Env = nil
	}
	out.Scripts = in.Scripts
	out.Incremental = (*bool)(unsafe.Pointer(in.Incremental))
	out.ForcePull = in.ForcePull
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]build.BuildVolume, len(*in))
		for i := range *in {
			if err := Convert_v1_BuildVolume_To_build_BuildVolume(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Volumes = nil
	}
	return nil
}

func autoConvert_build_SourceBuildStrategy_To_v1_SourceBuildStrategy(in *build.SourceBuildStrategy, out *buildv1.SourceBuildStrategy, s conversion.Scope) error {
	if err := apiscorev1.Convert_core_ObjectReference_To_v1_ObjectReference(&in.From, &out.From, s); err != nil {
		return err
	}
	if in.PullSecret != nil {
		in, out := &in.PullSecret, &out.PullSecret
		*out = new(corev1.LocalObjectReference)
		if err := apiscorev1.Convert_core_LocalObjectReference_To_v1_LocalObjectReference(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.PullSecret = nil
	}
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make([]corev1.EnvVar, len(*in))
		for i := range *in {
			if err := apiscorev1.Convert_core_EnvVar_To_v1_EnvVar(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Env = nil
	}
	out.Scripts = in.Scripts
	out.Incremental = (*bool)(unsafe.Pointer(in.Incremental))
	out.ForcePull = in.ForcePull
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]buildv1.BuildVolume, len(*in))
		for i := range *in {
			if err := Convert_build_BuildVolume_To_v1_BuildVolume(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Volumes = nil
	}
	return nil
}

// Convert_build_SourceBuildStrategy_To_v1_SourceBuildStrategy is an autogenerated conversion function.
func Convert_build_SourceBuildStrategy_To_v1_SourceBuildStrategy(in *build.SourceBuildStrategy, out *buildv1.SourceBuildStrategy, s conversion.Scope) error {
	return autoConvert_build_SourceBuildStrategy_To_v1_SourceBuildStrategy(in, out, s)
}

func autoConvert_v1_SourceControlUser_To_build_SourceControlUser(in *buildv1.SourceControlUser, out *build.SourceControlUser, s conversion.Scope) error {
	out.Name = in.Name
	out.Email = in.Email
	return nil
}

// Convert_v1_SourceControlUser_To_build_SourceControlUser is an autogenerated conversion function.
func Convert_v1_SourceControlUser_To_build_SourceControlUser(in *buildv1.SourceControlUser, out *build.SourceControlUser, s conversion.Scope) error {
	return autoConvert_v1_SourceControlUser_To_build_SourceControlUser(in, out, s)
}

func autoConvert_build_SourceControlUser_To_v1_SourceControlUser(in *build.SourceControlUser, out *buildv1.SourceControlUser, s conversion.Scope) error {
	out.Name = in.Name
	out.Email = in.Email
	return nil
}

// Convert_build_SourceControlUser_To_v1_SourceControlUser is an autogenerated conversion function.
func Convert_build_SourceControlUser_To_v1_SourceControlUser(in *build.SourceControlUser, out *buildv1.SourceControlUser, s conversion.Scope) error {
	return autoConvert_build_SourceControlUser_To_v1_SourceControlUser(in, out, s)
}

func autoConvert_v1_SourceRevision_To_build_SourceRevision(in *buildv1.SourceRevision, out *build.SourceRevision, s conversion.Scope) error {
	// INFO: in.Type opted out of conversion generation
	out.Git = (*build.GitSourceRevision)(unsafe.Pointer(in.Git))
	return nil
}

// Convert_v1_SourceRevision_To_build_SourceRevision is an autogenerated conversion function.
func Convert_v1_SourceRevision_To_build_SourceRevision(in *buildv1.SourceRevision, out *build.SourceRevision, s conversion.Scope) error {
	return autoConvert_v1_SourceRevision_To_build_SourceRevision(in, out, s)
}

func autoConvert_build_SourceRevision_To_v1_SourceRevision(in *build.SourceRevision, out *buildv1.SourceRevision, s conversion.Scope) error {
	out.Git = (*buildv1.GitSourceRevision)(unsafe.Pointer(in.Git))
	return nil
}

func autoConvert_v1_SourceStrategyOptions_To_build_SourceStrategyOptions(in *buildv1.SourceStrategyOptions, out *build.SourceStrategyOptions, s conversion.Scope) error {
	out.Incremental = (*bool)(unsafe.Pointer(in.Incremental))
	return nil
}

// Convert_v1_SourceStrategyOptions_To_build_SourceStrategyOptions is an autogenerated conversion function.
func Convert_v1_SourceStrategyOptions_To_build_SourceStrategyOptions(in *buildv1.SourceStrategyOptions, out *build.SourceStrategyOptions, s conversion.Scope) error {
	return autoConvert_v1_SourceStrategyOptions_To_build_SourceStrategyOptions(in, out, s)
}

func autoConvert_build_SourceStrategyOptions_To_v1_SourceStrategyOptions(in *build.SourceStrategyOptions, out *buildv1.SourceStrategyOptions, s conversion.Scope) error {
	out.Incremental = (*bool)(unsafe.Pointer(in.Incremental))
	return nil
}

// Convert_build_SourceStrategyOptions_To_v1_SourceStrategyOptions is an autogenerated conversion function.
func Convert_build_SourceStrategyOptions_To_v1_SourceStrategyOptions(in *build.SourceStrategyOptions, out *buildv1.SourceStrategyOptions, s conversion.Scope) error {
	return autoConvert_build_SourceStrategyOptions_To_v1_SourceStrategyOptions(in, out, s)
}

func autoConvert_v1_StageInfo_To_build_StageInfo(in *buildv1.StageInfo, out *build.StageInfo, s conversion.Scope) error {
	out.Name = build.StageName(in.Name)
	out.StartTime = in.StartTime
	out.DurationMilliseconds = in.DurationMilliseconds
	out.Steps = *(*[]build.StepInfo)(unsafe.Pointer(&in.Steps))
	return nil
}

// Convert_v1_StageInfo_To_build_StageInfo is an autogenerated conversion function.
func Convert_v1_StageInfo_To_build_StageInfo(in *buildv1.StageInfo, out *build.StageInfo, s conversion.Scope) error {
	return autoConvert_v1_StageInfo_To_build_StageInfo(in, out, s)
}

func autoConvert_build_StageInfo_To_v1_StageInfo(in *build.StageInfo, out *buildv1.StageInfo, s conversion.Scope) error {
	out.Name = buildv1.StageName(in.Name)
	out.StartTime = in.StartTime
	out.DurationMilliseconds = in.DurationMilliseconds
	out.Steps = *(*[]buildv1.StepInfo)(unsafe.Pointer(&in.Steps))
	return nil
}

// Convert_build_StageInfo_To_v1_StageInfo is an autogenerated conversion function.
func Convert_build_StageInfo_To_v1_StageInfo(in *build.StageInfo, out *buildv1.StageInfo, s conversion.Scope) error {
	return autoConvert_build_StageInfo_To_v1_StageInfo(in, out, s)
}

func autoConvert_v1_StepInfo_To_build_StepInfo(in *buildv1.StepInfo, out *build.StepInfo, s conversion.Scope) error {
	out.Name = build.StepName(in.Name)
	out.StartTime = in.StartTime
	out.DurationMilliseconds = in.DurationMilliseconds
	return nil
}

// Convert_v1_StepInfo_To_build_StepInfo is an autogenerated conversion function.
func Convert_v1_StepInfo_To_build_StepInfo(in *buildv1.StepInfo, out *build.StepInfo, s conversion.Scope) error {
	return autoConvert_v1_StepInfo_To_build_StepInfo(in, out, s)
}

func autoConvert_build_StepInfo_To_v1_StepInfo(in *build.StepInfo, out *buildv1.StepInfo, s conversion.Scope) error {
	out.Name = buildv1.StepName(in.Name)
	out.StartTime = in.StartTime
	out.DurationMilliseconds = in.DurationMilliseconds
	return nil
}

// Convert_build_StepInfo_To_v1_StepInfo is an autogenerated conversion function.
func Convert_build_StepInfo_To_v1_StepInfo(in *build.StepInfo, out *buildv1.StepInfo, s conversion.Scope) error {
	return autoConvert_build_StepInfo_To_v1_StepInfo(in, out, s)
}

func autoConvert_v1_WebHookTrigger_To_build_WebHookTrigger(in *buildv1.WebHookTrigger, out *build.WebHookTrigger, s conversion.Scope) error {
	out.Secret = in.Secret
	out.AllowEnv = in.AllowEnv
	out.SecretReference = (*build.SecretLocalReference)(unsafe.Pointer(in.SecretReference))
	return nil
}

// Convert_v1_WebHookTrigger_To_build_WebHookTrigger is an autogenerated conversion function.
func Convert_v1_WebHookTrigger_To_build_WebHookTrigger(in *buildv1.WebHookTrigger, out *build.WebHookTrigger, s conversion.Scope) error {
	return autoConvert_v1_WebHookTrigger_To_build_WebHookTrigger(in, out, s)
}

func autoConvert_build_WebHookTrigger_To_v1_WebHookTrigger(in *build.WebHookTrigger, out *buildv1.WebHookTrigger, s conversion.Scope) error {
	out.Secret = in.Secret
	out.AllowEnv = in.AllowEnv
	out.SecretReference = (*buildv1.SecretLocalReference)(unsafe.Pointer(in.SecretReference))
	return nil
}

// Convert_build_WebHookTrigger_To_v1_WebHookTrigger is an autogenerated conversion function.
func Convert_build_WebHookTrigger_To_v1_WebHookTrigger(in *build.WebHookTrigger, out *buildv1.WebHookTrigger, s conversion.Scope) error {
	return autoConvert_build_WebHookTrigger_To_v1_WebHookTrigger(in, out, s)
}
